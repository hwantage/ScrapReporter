
<!DOCTYPE html>

<html>
<head>
<!-- Ver 2.0 -->
<title>이벤터스 :: 행사와 함께하는 모든 순간</title>
<link href="/images/eventus-icon_iphone.png?220325" rel="apple-touch-icon"/>
<link href="/manifest.json?2023020202" rel="manifest">
<script src="/Content/neweventus/script/pwa.js?v01"></script>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<meta content="telephone=no" name="format-detection"/>
<meta content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover" name="viewport"/>
<meta content="6abb99506d19b79d2c3fe7bfb92cafc4c17f40e4" name="naver-site-verification">
<meta content="IE=edge" http-equiv="X-UA-Compatible"/>
<meta content="no" name="msapplication-tap-highlight"/>
<meta content="내가 원하는 행사를 개최하거나, 참여할 수 있는 플랫폼 - 이벤터스" name="description"/>
<meta content="행사모집,행사 플랫폼,모임 플랫폼, 행사운영,모임,이벤트,하이브리드 이벤트, 추천 행사, 온라인 행사, 웨비나" name="keywords"/>
<meta content="website" property="og:type"/>
<meta content="이벤터스 :: 행사와 함께하는 모든 순간" property="og:title">
<meta content="내가 원하는 행사를 개최하거나, 참여할 수 있는 플랫폼 - 이벤터스" property="og:description"/>
<meta content="https://event-us.kr/images/eventus_thumbnail2.jpg?fit=640%2C360" property="og:image">
<meta content="https://event-us.kr/images/eventus_thumbnail2.jpg?fit=640%2C360" property="og:image:secure_url">
<meta content="1000" property="og:image:width">
<meta content="343" property="og:image:height">
<meta content="https://event-us.kr/search?Query=&amp;EventType=&amp;Category=IT/%EA%B0%9C%EB%B0%9C&amp;Area=&amp;CostMin=&amp;Order=" property="og:url"/>
<meta content="136314230510204" property="fb:app_id">
<link href="/search?query=&amp;eventtype=&amp;category=it/%ea%b0%9c%eb%b0%9c&amp;area=&amp;costmin=&amp;order=" rel="canonical"/>
<!-- GrowthFit Google Tag Manager -->
<meta content="3704d95cf4764b65ca1cfea40f2d1af2d21572f2" name="naver-site-verification">
<meta content="vpzujpK-hobMlPNOk1yRN5aj31iVrls2qq-r9sAQtS0" name="google-site-verification"/>
<script>
        (function (w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
                    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                    'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-WXXCN9W');</script>
<!-- End GrowthFit Google Tag Manager -->
<script charset="UTF-8" src="//t1.daumcdn.net/adfit/static/kp.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.8/axios.min.js"></script>
<script>
        var InstallWay = "Browser";
        window.addEventListener('appinstalled', async (evt) => {
            await axios.post("/home/postpwainstallstate", {
                UserId: "PjNu-gh3hH484OIC6wFHEvCCNVrX05HJnafcCFlBd0EDjxUJ-4AnW17p9kKN7hT5seadT6rAfeuZ1dLi7hnzs8dK0BrFGC8tvmE9ZKisluepr7aPMmMnugaNHN_XSbW7r9aFag2",
                Device: "False" === "True" ? "Mobile" : "PC",
                UserType: "PjNu-gh3hH484OIC6wFHEvCCNVrX05HJnafcCFlBd0EDjxUJ-4AnW17p9kKN7hT5seadT6rAfeuZ1dLi7hnzs8dK0BrFGC8tvmE9ZKisluepr7aPMmMnugaNHN_XSbW7r9aFag2" === "PjNu-gh3hH484OIC6wFHEvCCNVrX05HJnafcCFlBd0EDjxUJ-4AnW17p9kKN7hT5seadT6rAfeuZ1dLi7hnzs8dK0BrFGC8tvmE9ZKisluepr7aPMmMnugaNHN_XSbW7r9aFag2" ? "Anonymous" : "User",
                UserAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36",
                InstallWay: InstallWay
            });
        });
        

    </script>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-75736254-1"></script>
<script>
            if (typeof kakaoPixel !== 'undefined') {
                kakaoPixel('4997877247864322440').pageView();
            }

            (function (w, d, s, l, i) {
                w[l] = w[l] || []; w[l].push({
                    'gtm.start':
                        new Date().getTime(), event: 'gtm.js'
                }); var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                        'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
            })(window, document, 'script', 'dataLayer', 'GTM-PDVW6RC');

            window.dataLayer = window.dataLayer || [];
            function gtag() { dataLayer.push(arguments); }
            gtag('js', new Date());

            gtag('config', 'UA-75736254-1');
        </script>
<script defer="" src="/contents/js/log.es5.min.js"></script>
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-Z3JJ3P1SEG"></script>
<script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());
        gtag('config', 'G-Z3JJ3P1SEG', {
            'user_id': 'PjNu-gh3hH484OIC6wFHEvCCNVrX05HJnafcCFlBd0EDjxUJ-4AnW17p9kKN7hT5seadT6rAfeuZ1dLi7hnzs8dK0BrFGC8tvmE9ZKisluepr7aPMmMnugaNHN_XSbW7r9aFag2'
        });
        gtag('set', 'user_properties', {
            'crm_id': 'PjNu-gh3hH484OIC6wFHEvCCNVrX05HJnafcCFlBd0EDjxUJ-4AnW17p9kKN7hT5seadT6rAfeuZ1dLi7hnzs8dK0BrFGC8tvmE9ZKisluepr7aPMmMnugaNHN_XSbW7r9aFag2'
        });
    </script>
<script>
        (function () {
            'use strict';

            var color = {
                brown: "color:#560000;font-size:11px;",
                red: "color:#d83128;font-size:11px;",
                yellow: "color:#ea991b;font-size:11px;",
                green: "color:#93ba2f;font-size:11px;",
                blue: "color:#4da4e0;font-size:11px;",
                purple: [
                    "color:#1d4ed8;font-size:11px;",
                    "color:#4338ca;font-size:11px;",
                    "color:#6d28d9;font-size:11px;",
                    "color:#5b21b6;font-size:11px;",
                    "color:#6b21a8;font-size:11px;",
                    "color:#581c87;font-size:11px;",
                    "color:#4c1d95;font-size:13px;",
                ],
            };

            if (typeof console === "object" && console.log && typeof console.log === "function") {
                const msg = "%c _____                      _                       \
                                            \n%c|  ___|                    | |                      \
                                            \n%c| |__  __   __  ___  _ __  | |_  ______  _   _  ___ \
                                            \n%c|  __| \\ \\ / / / _ \\| '_ \\ | __||______|| | | |/ __|\
                                            \n%c| |___  \\ V / |  __/| | | || |_         | |_| |\\__ \\ \
                                            \n%c|____/   \\_/   \\___||_| |_| \\__|         \\__,_||___/ \
                                            \n%c 행사와 함께 하는 모든 순간 이벤터스\n";
                if (isUA('chrome') && !isUA('edge')) {
                    console.log(
                        msg,
                        color.purple[0],
                        color.purple[1],
                        color.purple[2],
                        color.purple[3],
                        color.purple[4],
                        color.purple[5],
                        color.purple[6],
                    );
                } else {
                    console.log(msg.replaceAll("%c", ""));
                }
                console.log("\x3e \x3e \x3e https://event-us.workfit.info/\n")
            }

            function isUA(userAgent) {
                return navigator.userAgent.toLowerCase().indexOf(userAgent) > -1;
            }
            fetch(`/home/inflowsessionsave?referrer=${encodeURIComponent(document.referrer)}`)
                .catch(error => console.error('Error:', error));
        })();
    </script>
<script type="text/javascript">
        (function (w, d, a) {
            w.__beusablerumclient__ = {
                load: function (src) {
                    var b = d.createElement("script");
                    b.src = src; b.async = true; b.type = "text/javascript";
                    d.getElementsByTagName("head")[0].appendChild(b);
                }
            }; w.__beusablerumclient__.load(a + "?url=" + encodeURIComponent(d.URL));
        })(window, document, "//rum.beusable.net/load/b190312e135117u861");
    </script>
<script src="/Content/dist/js/preload.js?45a5f1f36d0edcb3"></script><style>body {
        opacity: 0;
      }

      body[loaded] {
        opacity: 1;
      }</style><script>function docReady(e) {
        'complete' === document.readyState || 'interactive' === document.readyState
          ? setTimeout(e, 1)
          : document.addEventListener('DOMContentLoaded', e);
      }
      docReady(() => {
        document.querySelector('body').setAttribute('loaded', '');
      });</script>
<script defer="defer" src="/Content/dist/js/chunk-vendors.js?45a5f1f36d0edcb3"></script><script defer="defer" src="/Content/dist/js/default.js?45a5f1f36d0edcb3"></script><link href="/Content/dist/css/default.css?45a5f1f36d0edcb3" rel="stylesheet"/>
<style>
        img.optimize {
            image-rendering: -webkit-optimize-contrast;
        }
    </style>
<script>
        const asp = {
            user: {
                get isAuthenticated() {
                    return false;
                },
                get name() {
                    return '';
                },
                get email() {
                    return '';
                },
                get rawUrl() {
                    return '/search?Query=&amp;EventType=&amp;Category=IT/%EA%B0%9C%EB%B0%9C&amp;Area=&amp;CostMin=&amp;Order=';
                },
            },
            get blobUrl(){
                return 'https://eventusstorage.blob.core.windows.net/evs'
            },
        };
    </script>
<script type="application/ld+json">
        
    {
        "@context": "http://schema.org",
        "@type": "Organization",
        "name": "이벤터스",
        "url": "https://event-us.kr",
        "logo": "https://event-us.kr/Content/neweventus/Image/eventus_logo.png",
        "description": "내가 원하는 행사를 개최하거나, 참여할 수 있는 플랫폼 - 이벤터스",
        "sameAs": [
            "https://blog.naver.com/withitblog",
            "https://www.facebook.com/eventus.korea",
            "https://www.instagram.com/event.with.us/",
            "https://www.youtube.com/channel/UCotb2ainbLyD59J88M0XXxw"
        ]
    }
    
    </script>
<script type="text/javascript">
        _linkedin_partner_id = "4074420";
        window._linkedin_data_partner_ids = window._linkedin_data_partner_ids || [];
        window._linkedin_data_partner_ids.push(_linkedin_partner_id);
    </script>
<script type="text/javascript">
        (function (l) {
            if (!l) {
                window.lintrk = function (a, b) { window.lintrk.q.push([a, b]) };
                window.lintrk.q = []
            }
            var s = document.getElementsByTagName("script")[0];
            var b = document.createElement("script");
            b.type = "text/javascript"; b.async = true;
            b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js";
            s.parentNode.insertBefore(b, s);
        })(window.lintrk);
    </script>
<noscript>
<img alt="" height="1" src="https://px.ads.linkedin.com/collect/?pid=4074420&amp;fmt=gif" style="display: none;" width="1"/>
</noscript>
<script defer="" src="/contents/js/log.es5.min.js"></script>
</meta></meta></meta></meta></meta></meta></meta></meta></link></head>
<body class="">
<!-- GrowthFit Google Tag Manager (noscript) -->
<noscript>
<iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-WXXCN9W" style="display:none;visibility:hidden" width="0"></iframe>
</noscript>
<!-- End GrowthFit Google Tag Manager (noscript) -->
<noscript>
<img height="1" src="https://www.facebook.com/tr?id=467831983562863&amp;ev=PageView&amp;noscript=1" width="1"/>
<iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-PDVW6RC" style="display: none; visibility: hidden" width="0">
</iframe>
</noscript>
<div id="uiAlerts">
<ev-modal :class="{ 'text-center': confirmTheme }" :open="isOpen" class="max-w-sm" level="alert">
<template #title="" v-if="title">
<div class="flex justify-center items-center mx-auto mb-6 w-12 h-12 rounded-full bg-success-50" v-if="confirmTheme === 'success'">
<svg class="w-6 h-6 text-success-500" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" fill-rule="evenodd"></path>
</svg>
</div>
<div class="flex justify-center items-center mx-auto mb-6 w-12 h-12 rounded-full bg-danger-50" v-if="confirmTheme === 'danger'">
<svg aria-hidden="true" class="w-6 h-6 text-danger-500" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" fill-rule="evenodd"></path>
</svg>
</div>
<div class="flex justify-center items-center mx-auto mb-6 w-12 h-12 rounded-full bg-danger-50" v-if="confirmTheme === 'delete'">
<svg class="w-6 h-6 text-danger-500" fill="none" stroke="currentColor" stroke-width="1.5" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" stroke-linecap="round" stroke-linejoin="round"></path>
</svg>
</div>
<div class="flex justify-center items-center mx-auto mb-6 w-12 h-12 rounded-full bg-warning-50" v-if="confirmTheme === 'warning'">
<svg class="w-6 h-6 text-warning-500" fill="none" stroke="currentColor" stroke-width="1.5" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z" stroke-linecap="round" stroke-linejoin="round"></path>
</svg>
</div>
<div class="font-bold text-base">{{ title }}</div>
</template>
<template #description="" v-if="description">
<div class="whitespace-pre-line mt-2" v-dompurify-html="description">
</div>
</template>
<template v-if="confirmTheme">
<div class="flex space-x-4">
<ev-button @click="closeAction" small="" v-if="!hideCloseButton &amp;&amp; onClose !== false">
                    {{ closeTitle ?? '닫기' }}
                </ev-button>
<ev-button :class="[ confirmButtonClass[confirmTheme] ]" @click="confirmAction" small="" v-if="!hideConfirmButton">
                    {{ confirmTitle ?? '확인' }}
                </ev-button>
</div>
</template>
<template v-else="">
<div class="flex space-x-2">
<ev-button @click="closeAction" class="flex-1" small="" v-if="!hideCloseButton">
                    {{ closeTitle ?? '닫기' }}
                </ev-button>
<ev-button :class="[ 'flex-1', confirmTheme === 'danger' ? 'bg-danger-500' : 'bg-primary-500' ]" @click="confirmAction" small="" v-if="!hideConfirmButton &amp;&amp; onConfirm">
                    {{ confirmTitle ?? '확인' }}
                </ev-button>
</div>
</template>
</ev-modal>
</div>
<script>
    docReady(() => {
        ui.createApp({
            data() {
                return {
                    isOpen: false,
                    title: null,
                    description: null,
                    onClose: null,
                    closeTitle: null,
                    onConfirm: null,
                    confirmTitle: null,
                    confirmTheme: null,
                    hideCloseButton: false,
                    hideConfirmButton: false,

                    confirmButtonClass: {
                        success: 'bg-primary-500',
                        danger: 'bg-danger-500',
                        delete: 'bg-danger-500',
                        warning: 'bg-primary-500',
                    },
                };
            },
            methods: {
                closeAction() {
                    if (typeof this.onClose === 'function') {
                        this.onClose();
                    }
                    this.isOpen = false;
                },
                confirmAction() {
                    if (typeof this.onConfirm === 'function') {
                        this.onConfirm();
                    }
                    this.isOpen = false;
                },
            },
            mounted() {
                const self = this;
                ui.alert = function (model) {
                    Object.assign(self, {
                        title: null,
                        description: null,
                        onClose: null,
                        closeTitle: null,
                        onConfirm: null,
                        confirmTitle: null,
                        confirmTheme: null,
                        hideCloseButton: false,
                        hideConfirmButton: false,

                        confirmButtonClass: {
                            success: 'bg-primary-500',
                            danger: 'bg-danger-500',
                            delete: 'bg-danger-500',
                            warning: 'bg-primary-500',
                        },
                    });
                    if (typeof model === 'string') {
                        self.title = model;
                    } else if (typeof model === 'object') {
                        Object.assign(self, model);
                    }
                    self.$nextTick(() => {
                        self.isOpen = true;
                    });
                };
                ui.favorite = function (id, callback) {
                    axios
                        .post('/useraction/favoriteevent', {
                            id,
                            location: location.pathname,
                        })
                        .then(function ({ data }) {
                            if (data.Message === 'NeedLogin') {
                                ui.alert({
                                    title: '로그인이 필요합니다.',
                                    description: '로그인 할까요?',
                                    onConfirm() {
                                        util.newTab('/account/login?afterAction');
                                        window._loginCallBack = function () {
                                            ui.favorite(id, callback);
                                        };
                                    },
                                });

                                return;
                            }
                            if (data.IsSuccess) {
                                if (data.Message === 'Added') {
                                    ui.alert('관심 행사에 추가 했습니다');
                                    mixpanel.track('favorite_item', {
                                        item_id: id,
                                        item_name: data.EventTitle,
                                        item_brand: data.Channel,
                                    });
                                } else {
                                    ui.alert('관심 행사에서 삭제했습니다');
                                }
                                if (typeof callback === 'function') {
                                    callback(data.Message === 'Added');
                                }
                            }
                        });
                };
                ui.subscribe = function (subdomain, callback) {
                    axios.post('/useraction/usersubscribe', { subdomain }).then(({ data }) => {
                        if (data.Message === 'NeedLogin') {
                            ui.alert({
                                title: '로그인이 필요한 서비스입니다.',
                                description:
                                    '바로 로그인하고, 채널을 구독하세요.\n새롭게 개설되는 행사 안내를 받을 수 있습니다.',
                                confirmTitle: '로그인 하기',
                                closeTitle: '취소',
                                onConfirm() {
                                    util.newTab('/account/login?afterAction');
                                    window._loginCallBack = function () {
                                        ui.subscribe(subdomain, callback);
                                    };
                                },
                            });

                            return;
                        }
                        if (data.IsSuccess) {
                            if (data.Message === 'Added') {
                                mixpanel.track('channel_subscribe', { channel_id: subdomain });
                                ui.alert({
                                    title: '채널을 구독했습니다.',
                                    description: '구독 채널에 새로운 행사가 개설되면 메일로 알려드려요.',
                                    confirmTheme: 'success',
                                    confirmTitle: '구독 채널 바로가기',
                                    closeTitle: '계속 살펴보기',
                                    onConfirm() {
                                        location.href = '/mypage/subscriptions';
                                    },
                                });
                                gtag('event', 'channel_subscribe', {
                                    channel: subdomain,
                                    items: [
                                        {
                                            index: 'channel_subscribe',
                                        },
                                    ],
                                });
                            } else {
                                mixpanel.track('channel_subscribe_cancel', { channel_id: subdomain });
                                ui.alert({
                                    title: '구독을 취소 했습니다.',
                                    description:
                                        '구독 채널에서 삭제했습니다.\n더이상 새로운 행사 알림 메일을 받을 수 없습니다.',
                                    closeTitle: '확인',
                                });
                                gtag('event', 'channel_subscribe_cancel', {
                                    channel: subdomain,
                                    items: [
                                        {
                                            index: 'channel_subscribe_cancel',
                                        },
                                    ],
                                });
                            }
                            if (typeof callback === 'function') {
                                callback(data.Message === 'Added');
                            }
                        }
                    });
                };
                ui.subscribeAlert = function (subdomain, callback) {
                    axios.post('/useraction/toggleusersubscribealert', { subdomain }).then(({ data }) => {
                        if (data.Message === 'NeedLogin') {
                            ui.alert({
                                title: '로그인이 필요한 서비스입니다.',
                                description:
                                    '바로 로그인하고, 채널을 구독하세요.\n새롭게 개설되는 행사 안내를 받을 수 있습니다.',
                                confirmTitle: '로그인 하기',
                                closeTitle: '취소',
                                onConfirm() {
                                    util.newTab('/account/login?afterAction');
                                    window._loginCallBack = function () {
                                        ui.subscribe(subdomain, callback);
                                    };
                                },
                            });

                            return;
                        }
                        if (data.IsSuccess) {
                            if (data.Message === 'Added') {
                                ui.alert({
                                    title: '채널알람을 설정했습니다.',
                                    description: '구독 채널에 새로운 행사가 개설되면 메일로 알려드려요.',
                                    confirmTheme: 'success',
                                    confirmTitle: '구독 채널 바로가기',
                                    closeTitle: '계속 살펴보기',
                                    onConfirm() {
                                        location.href = '/mypage/subscriptions';
                                    },
                                });
                            } else {
                                ui.alert({
                                    title: '채널알람을 해제했습니다.',
                                    description: '더이상 새로운 행사 알림 메일을 받을 수 없습니다.',
                                    closeTitle: '확인',
                                });
                            }
                            if (typeof callback === 'function') {
                                callback(data.Message === 'Added');
                            }
                        }
                    });
                };
            },
        }).mount('#uiAlerts');
    });
</script>
<div id="uiSuperChannelAlert">
<ev-modal :open="isOpen" class="flex flex-col justify-between w-[336px] h-[340px] space-y-0 p-0 m-0 sm:p-0 bg-[#8d71dd]">
<div class="flex flex-col w-full h-full text-center items-center text-white">
<svg class="mt-8 mb-5" height="93" viewbox="0 0 106 106" width="93" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<defs>
<filter filterunits="userSpaceOnUse" height="106" id="타원_422" width="106" x="0" y="0">
<feoffset dy="3" input="SourceAlpha"></feoffset>
<fegaussianblur result="blur" stddeviation="3"></fegaussianblur>
<feflood flood-opacity="0.161"></feflood>
<fecomposite in2="blur" operator="in"></fecomposite>
<fecomposite in="SourceGraphic"></fecomposite>
</filter>
<clippath id="clip-path">
<rect data-name="사각형 7430" fill="none" height="56.32" id="사각형_7430" width="37.722"></rect>
</clippath>
</defs>
<g data-name="그룹 13423" id="그룹_13423" transform="translate(1684 -4058)">
<g filter="url(#타원_422)" transform="matrix(1, 0, 0, 1, -1684, 4058)">
<circle cx="44" cy="44" data-name="타원 422" fill="#fff" id="타원_422-2" r="44" transform="translate(9 6)"></circle>
</g>
<g data-name="그룹 11833" id="그룹_11833" transform="translate(-1888.018 3585.982)">
<rect data-name="사각형 7431" fill="rgba(255,255,255,0)" height="68" id="사각형_7431" transform="translate(223.018 490.018)" width="68"></rect>
<g data-name="그룹 11832" id="그룹_11832" transform="translate(238.155 495.691)">
<g clip-path="url(#clip-path)" data-name="그룹 11831" id="그룹_11831">
<path d="M62.736,21.023l-8.854,4.3a2.154,2.154,0,0,1-1.881,0l-8.854-4.3a2.154,2.154,0,0,1-1.211-1.839l-.9-16.856A2.154,2.154,0,0,1,43.185.076H62.7a2.154,2.154,0,0,1,2.152,2.252l-.9,16.856a2.154,2.154,0,0,1-1.211,1.839" data-name="패스 6667" fill="#9e64ff" id="패스_6667" transform="translate(-34.133 -0.063)"></path>
<path d="M55.639,163.909l1.671,2.866A2.783,2.783,0,0,0,58.8,168l4.486,1.556a2.783,2.783,0,0,1,1.057,4.6l-2.355,2.358a2.783,2.783,0,0,0-.8,2.22l.369,4.03a2.783,2.783,0,0,1-4.05,2.725l-3.045-1.576a2.782,2.782,0,0,0-2.558,0l-2.925,1.514a2.783,2.783,0,0,1-4.044-2.786l.437-3.842a2.783,2.783,0,0,0-.831-2.316l-2.281-2.2a2.783,2.783,0,0,1,1.108-4.658l4.108-1.277a2.783,2.783,0,0,0,1.6-1.3L50.8,163.96a2.783,2.783,0,0,1,4.833-.044" data-name="패스 6668" fill="#ffdf7b" id="패스_6668" transform="translate(-34.449 -135.204)"></path>
<path d="M0,214.656a1.01,1.01,0,0,0,1.01,1.01h1.9a1.01,1.01,0,1,0,0-2.019H1.01A1.01,1.01,0,0,0,0,214.656" data-name="패스 6669" fill="#ffdf7b" id="패스_6669" transform="translate(0 -177.728)"></path>
<path d="M201.038,214.656a1.01,1.01,0,0,0,1.01,1.01h1.9a1.01,1.01,0,0,0,0-2.019h-1.9a1.01,1.01,0,0,0-1.01,1.01" data-name="패스 6670" fill="#ffdf7b" id="패스_6670" transform="translate(-167.24 -177.728)"></path>
<path d="M106.559,311.663a1.01,1.01,0,0,0-1.01,1.01v1.9a1.01,1.01,0,0,0,2.019,0v-1.9a1.01,1.01,0,0,0-1.01-1.01" data-name="패스 6671" fill="#ffdf7b" id="패스_6671" transform="translate(-87.804 -259.267)"></path>
<path d="M13.762,286.693a1.01,1.01,0,0,0,1.428,0l1.346-1.346a1.01,1.01,0,1,0-1.428-1.428l-1.346,1.346a1.01,1.01,0,0,0,0,1.428" data-name="패스 6672" fill="#fff3c8" id="패스_6672" transform="translate(-11.202 -235.941)"></path>
<path d="M186.786,284.073a1.01,1.01,0,0,0,0,1.428l1.346,1.346a1.01,1.01,0,1,0,1.428-1.428l-1.346-1.346a1.01,1.01,0,0,0-1.428,0" data-name="패스 6673" fill="#fff3c8" id="패스_6673" transform="translate(-155.138 -236.069)"></path>
<path d="M41.4,2.252l.9,16.856a2.154,2.154,0,0,0,1.211,1.839L48.2,23.22,59.651,0h-16.1A2.154,2.154,0,0,0,41.4,2.252" data-name="패스 6674" fill="#a46dff" id="패스_6674" transform="translate(-34.439)"></path>
</g>
</g>
</g>
</g>
</svg>
<div class="text-2xl mb-3"><span class="font-bold">슈퍼채널</span>이란?</div>
<div>
                최근 1년간 행사 개최 수, 누적 참가 수 등에서<br/>
                우수한 채널에게 부여되는 인증 마크입니다.
            </div>
</div>
<div class="bg-white p-6 rounded-t-none rounded-b-md h-16">
<div class="flex justify-end items-center h-full">
<div @click="closeAction" class="text-base text-gray-900 cursor-pointer">
                    닫기
                </div>
</div>
</div>
</ev-modal>
</div>
<script>
    docReady(() => {
        ui.createApp({
            data() {
                return {
                    isOpen: false,
                    noShow: false,
                    cookieName: 'SCnoShow',
                };
            },
            methods: {
                closeAction() {
                    if (this.noShow) {
                        util.setCookie(this.cookieName, 'true', 7);
                    }
                    this.isOpen = false;
                },
            },
            mounted() {
                const self = this;
                ui.superChannelAlert = function () {
                    if (!util.getCookie('SCnoShow')) {
                        self.isOpen = true;
                    }
                };
            },
        }).mount('#uiSuperChannelAlert');
    });
</script>
<div id="uiNeedModel">
<ev-modal :open="isOpen" @close="isOpen = false" class="max-w-sm">
<template #title="">
            공유하기
        </template>
<div class="my-4">
<div class="grid grid-cols-3 gap-4">
<button @click="facebookShare" class="aspect-1 p-4 border rounded-lg bg-white" type="button">
<svg class="rounded-full" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M22.68 0H1.32C.6 0 0 .6 0 1.32v21.36C0 23.4.6 24 1.32 24h11.5v-9.3H9.69v-3.62h3.13V8.41c0-3.1 1.9-4.79 4.66-4.79 1.32 0 2.46.1 2.8.15V7h-1.92c-1.5 0-1.8.71-1.8 1.76v2.32h3.59l-.47 3.62h-3.12V24h6.12c.73 0 1.32-.6 1.32-1.32V1.32C24 .6 23.4 0 22.68 0z" fill="#1877f2"></path>
</svg>
</button>
<button @click="kakaoShare" class="aspect-1 p-4 border rounded-lg bg-white" type="button">
<svg class="rounded-xl" viewbox="0 0 256 256" xmlns="http://www.w3.org/2000/svg">
<path d="M256 236c0 11-9 20-20 20H20c-11 0-20-9-20-20V20C0 9 9 0 20 0h216c11 0 20 9 20 20v216z" fill="#FFE812"></path>
<path d="M128 36C70.6 36 24 72.7 24 118c0 29.3 19.5 55 48.7 69.5-1.5 5.5-10.2 35.3-10.5 37.7 0 0-.2 1.7.9 2.4s2.5.1 2.5.1c3.3-.4 38-24.8 44-29 6 .9 12.1 1.3 18.4 1.3 57.4 0 104-36.7 104-82s-46.6-82-104-82z"></path>
<path d="M70.5 146.6c-3.3 0-6-2.5-6-5.7v-35.7h-9.4a5.9 5.9 0 0 1 0-11.7H86a5.9 5.9 0 0 1 0 11.8h-9.4v35.6c0 3.2-2.7 5.7-6 5.7zm52.6 0c-2.5 0-4.4-1-5-2.7l-3-7.8H97l-3 7.8c-.6 1.6-2.5 2.6-5 2.6a9.2 9.2 0 0 1-3.8-.8c-1.7-.7-3.3-2.8-1.4-8.5L98 99.4a9 9 0 0 1 8-5.9c4 0 7 3 8 6l14.3 37.7c1.9 5.7.3 7.8-1.4 8.5a9.2 9.2 0 0 1-3.8.8zM112 125.4l-6-17-6 17h12zm26 20.3a5.6 5.6 0 0 1-5.8-5.6V99.5c0-3.3 2.8-6 6.2-6s6.1 2.7 6.1 6v35.3h12.8c3.1 0 5.7 2.4 5.7 5.4s-2.6 5.6-5.8 5.6H138zm33.3.7a6 6 0 0 1-6-6v-41a6 6 0 0 1 12 0v12.9l16.8-16.7c.8-.9 2-1.4 3.3-1.4a6 6 0 0 1 4.1 1.8 6 6 0 0 1 1.8 3.8c0 1.4-.4 2.7-1.3 3.7l-13.7 13.6 14.8 19.6a6 6 0 0 1 1.1 4.4 6 6 0 0 1-2.3 4 6 6 0 0 1-3.6 1.2 6 6 0 0 1-4.8-2.4l-14-18.6-2.2 2v13.1a6 6 0 0 1-6 6z" fill="#FFE812"></path>
</svg>
</button>
<button @click="copyUrl" class="aspect-1 p-4 border rounded-lg bg-white" type="button">
<div class="aspect-1 bg-gray-50 rounded-lg flex items-center justify-center">
<svg class="h-5 w-5 text-success-300" fill="none" stroke="currentColor" stroke-width="2" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1" stroke-linecap="round" stroke-linejoin="round"></path>
</svg>
</div>
</button>
</div>
<div class="mt-2">
<button @click="renderQr" class="text-gray-500 underline" type="button">
                    QR코드 생성하기
                </button>
<div class="mt-2">
<div class="flex justify-center w-full">
<div id="_uiSahare_Qr"></div>
</div>
</div>
<div class="mt-2 text-center" id="_uiShare_saveQr" style="display: none">
<button @click="saveQr" class="text-gray-500 underline" type="button">
                        QR코드 저장하기
                    </button>
</div>
</div>
</div>
<ev-button @click="isOpen = false">
            닫기
        </ev-button>
</ev-modal>
</div>
<script>
        /* globals Kakao FB QRCode html2canvas */
        docReady(() => {
            let model;
            function url() {
                const host = location.origin;
                if (model && model.url) {
                    if (model.url[0] === '/') {
                        return host + model.url;
                    }

                    return model.url;
                }

                return host + location.pathname;
            }
            function getShareModel() {
                return {
                    title: document.title,
                    description: document.querySelector('meta[name="description"]').content,
                    imageUrl: document.querySelector('meta[property="og:image"]').content,
                };
            }

            ui.createApp({
                data() {
                    return {
                        isOpen: false,
                        shareModel: getShareModel(),
                    };
                },
                methods: {
                    facebookShare() {
                        FB.ui({
                            method: 'share',
                            display: 'popup',
                            href: url(),
                        });
                        axios.get(location.pathname.replace(/(\/event)/gi, '') + '/share');
                        this.pushGtag('facebook');
                    },
                    kakaoShare() {
                        const model = this.shareModel;
                        const kakaoObj = {
                            objectType: 'feed',
                            content: {
                                title: model.title,
                                description: model.description,
                                imageUrl: model.imageUrl,
                                link: {
                                    mobileWebUrl: url(),
                                    webUrl: url(),
                                },
                                imageWidth: 180,
                                imageHeight: 180,
                            },
                            buttons: [
                                {
                                    title: '채널 바로가기',
                                    link: {
                                        mobileWebUrl: url(),
                                        webUrl: url(),
                                    },
                                },
                            ],
                        };
                        Kakao.Link.sendDefault(kakaoObj);
                        axios.get(location.pathname.replace(/(\/event)/gi, '') + '/share');
                        this.pushGtag('kakao');
                    },
                    copyUrl() {
                        const self = this;
                        self.isOpen = false;
                        navigator.clipboard.writeText(url()).then(() => {
                            self.pushGtag('copyurl');
                            self.$nextTick(() => {
                                ui.alert('URL을 복사했습니다.');
                            });
                        });
                    },
                    renderQr() {
                        const targetEle = document.getElementById('_uiSahare_Qr');
                        if (targetEle.innerHTML) {
                            return;
                        }
                        new QRCode(targetEle, { width: 112, height: 112, text: url() });
                        document.getElementById('_uiShare_saveQr').style.display = 'block';
                        this.pushGtag('qrcode');
                    },
                    saveQr() {
                        const self = this;
                        html2canvas(document.querySelector('#_uiSahare_Qr')).then(function (canvas) {
                            const link = document.createElement('a');
                            link.download = `${self.shareModel.title}.png`;
                            link.href = canvas.toDataURL();
                            document.body.appendChild(link);
                            link.click();
                        });
                        mixpanel.track("file_download", {
                            page_path: url(),
                            click_text: 'QR코드 저장하기',
                            file_extension: 'png',
                            file_name: self.shareModel.title,
                            click_url: '',
                        });
                        gtag('event', 'file_download', {
                            page_path: url(),
                            click_text: 'QR코드 저장하기',
                            file_extension: 'png',
                            file_name: self.shareModel.title,
                            click_url: '',
                            items: [
                                {
                                    index: 'file_download',
                                },
                            ],
                        });
                    },
                    pushGtag(type) {
                        gtag('event', 'share', {
                            position: 'channel',
                            content_type: type,
                            item_id: url(),
                            index: 'share',
                        });
                    },
                },
                mounted() {
                    const self = this;
                    ui.share = function (shareModel) {
                        const t = {
                            url: null,
                        };
                        if (typeof shareModel === 'string') {
                            t.url = shareModel;
                        } else if (typeof shareModel === 'object') {
                            Object.assign(t, shareModel);
                        }
                        model = t;
                        self.isOpen = true;
                    };
                },
            }).mount('#uiNeedModel');
        });
</script>
<div id="uiToast">
<ui-transition-root :show="isOpen" as="template" enter="transition-opacity duration-500" enter-from="opacity-0" enter-to="opacity-100" leave="transition-opacity duration-500" leave-from="opacity-100" leave-to="opacity-0">
<div :class="[maxWidthClass,{
            'sm:left-auto' : onLocation === null,
            'mx-auto' : onLocation === 'center'
        }]" class="fixed left-0 right-0 top-0 z-[300] p-4 w-full">
<div :class="{
                'bg-success-50 border-success-300': theme === 'success',
                'bg-danger-50 border-danger-300': theme === 'danger',
                'bg-info-50 border-info-300': theme === 'info',
                'bg-gray-50 border-gray-300' : theme === 'disabled' || !theme
            }" class="flex items-center w-full px-4 py-5 rounded-md border">
<span class="mr-2.5 text-white">
<template v-if="theme === 'success'">
<svg class="w-6 h-6 fill-success-400" fill="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z" fill-rule="evenodd"></path>
</svg>
</template>
<template v-else-if="theme === 'danger'">
<svg class="w-6 h-6 fill-danger-400" fill="none" stroke="currentColor" stroke-width="1.5" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" stroke-linecap="round" stroke-linejoin="round"></path>
</svg>
</template>
<template v-else-if="theme === 'disabled'">
<svg class="w-6 h-6 fill-gray-400" fill="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z" fill-rule="evenodd"></path>
</svg>
</template>
<template v-else="">
<svg class="w-6 h-6 fill-info-400" fill="none" stroke="currentColor" stroke-width="1.5" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z" stroke-linecap="round" stroke-linejoin="round"></path>
</svg>
</template>
</span>
<span>
                    {{ message }}
                </span>
</div>
</div>
</ui-transition-root>
</div>
<script>
    docReady(() => {
        function getOptions() {
            return {
                theme: 'info',
                maxwidth: 'max-w-sm',
                message: '',
                onOpen: null,
                onClose: null,
                onLocation: null,
                duration: 5000,
            };
        }
        ui.createApp({
            data() {
                const data = Object.assign(
                    {
                        isOpen: false,
                    },
                    getOptions(),
                );

                return data;
            },
            computed: {
                maxWidthClass() {
                    const maxWidthMap = {
                        'max-w-xs': 'sm:max-w-xs',
                        'max-w-sm': 'sm:max-w-sm',
                        'max-w-md': 'sm:max-w-md',
                        'max-w-lg': 'sm:max-w-lg',
                        'max-w-xl': 'sm:max-w-xl',
                        'max-w-2xl': 'sm:max-w-2xl',
                    };

                    return maxWidthMap[this.maxwidth] || this.maxwidth;
                },
            },
            mounted() {
                const self = this;
                ui.toast = function (model, theme, maxwidth) {
                    Object.assign(self, getOptions());
                    if (typeof model === 'object') {
                        Object.assign(self, model);
                    } else {
                        self.message = model;
                    }
                    if (theme) {
                        self.theme = theme;
                    }
                    if (maxwidth) {
                        self.maxwidth = maxwidth;
                    }
                    self.$nextTick(() => {
                        if (typeof self.onOpen === 'function') {
                            self.onOpen();
                        }
                        self.isOpen = true;
                        setTimeout(() => {
                            if (typeof self.onClose === 'function') {
                                self.onClose();
                            }
                            self.isOpen = false;
                        }, self.duration);
                    });
                };
            },
        }).mount('#uiToast');
    });
</script>
<style>
    .skiptranslate > iframe {
        display: none !important;
    }
</style>
<header id="header">
<div class="bg-primary-400 text-white h-16 flex items-center flex-col item space-x-0 sm:flex-row sm:justify-center sm:space-x-1" v-show="!isUserEmailConfirmed">
<span>
<span class="font-bold">{{user.name}}</span>님
    </span>
<span>
        {{user.email}} 이메일을 확인하여 인증을 완료해주세요.
    </span>
<a @click="toggleEmailConfirmationModal('open')" class="text-sm flex items-center font-bold underline cursor-pointer">
        인증 메일 발송하기
        <svg class="h-4 w-4 ml-1" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" fill-rule="evenodd"></path>
</svg>
</a>
</div>
<ev-modal :open="isEmailConfirmationModalShow" class="text-center">
<template #title="">
<div class="flex justify-center items-center mx-auto mb-2 w-12 h-12 rounded-full bg-success-50">
<svg class="w-6 h-6 text-success-500" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" fill-rule="evenodd"></path>
</svg>
</div>
<div>
            메일이 전송되었습니다.
        </div>
</template>
<template #description="">
        메일을 확인해주세요.
    </template>
<ev-button @click="toggleEmailConfirmationModal('close')">확인</ev-button>
</ev-modal>
<nav>
<div class="container">
<div class="flex justify-between items-center h-8 md:h-12 md:pt-4">
<div class="flex grow items-center">
<a href="/">
<svg class="w-auto h-7 md:h-8" viewbox="0 0 56.965 25.467" xmlns="http://www.w3.org/2000/svg">
<g>
<g transform="translate(28.416 14.918)">
<path d="M66.549 33.4v5.987a2.055 2.055 0 0 1-.179.8 1.385 1.385 0 0 1-.447.536 1.3 1.3 0 0 1-.849.268 1.34 1.34 0 0 1-.849-.268 1.385 1.385 0 0 1-.447-.536 2.055 2.055 0 0 1-.179-.8V33.4h1.072v5.987a.67.67 0 0 0 .134.491l.223.089a.313.313 0 0 0 .313-.268.715.715 0 0 0 .045-.268V33.4z" fill="#5d3fbf" transform="translate(-63.6 -33.395)"></path>
<path d="M77.146 35.4a2.457 2.457 0 0 0-.089-.715c-.089-.223-.179-.357-.357-.357s-.357.313-.357.76a1.7 1.7 0 0 0 .268.8l.581.894a11.573 11.573 0 0 1 .715 1.162 2.591 2.591 0 0 1 .313 1.162 2.368 2.368 0 0 1-.313 1.3 1.608 1.608 0 0 1-2.547-.089 3.217 3.217 0 0 1-.268-1.519l1.072-.089a2.815 2.815 0 0 0 .089.849c.089.223.179.4.447.4s.447-.357.447-.8a1.876 1.876 0 0 0-.268-.8l-.268-.447-.711-1.032a4.289 4.289 0 0 1-.536-1.162 2.011 2.011 0 0 1-.089-.581 2.1 2.1 0 0 1 .313-1.162 1.34 1.34 0 0 1 1.117-.581 1.3 1.3 0 0 1 1.251.67 2.9 2.9 0 0 1 .268 1.34z" fill="#5d3fbf" transform="translate(-69.953 -33.389)"></path>
</g>
<path d="M86.562 13.493H53.5V0h33.062zm-31.5-1.564h29.981V1.564H55.064z" fill="#5d3fbf" transform="translate(-29.597)"></path>
<path d="M25.467 25.467H0V0h25.467z" fill="#5d3fbf"></path>
<path d="M70.835 40.238H53.5V26.7h17.335zm-15.771-1.564h14.208v-10.41H55.064z" fill="#5d3fbf" transform="translate(-29.597 -14.771)"></path>
<g transform="translate(28.46 2.993)">
<path d="M63.7 6.7h2.5v1.162h-1.383v1.966h1.028v1.206h-1.028v2.055h1.43v1.117H63.7z" fill="#5d3fbf" transform="translate(-63.7 -6.7)"></path>
<path d="M76.923 6.7H78l-1.162 7.506h-1.121L74.6 6.7h1.072l.536 4.11v.313h.045v-.313z" fill="#5d3fbf" transform="translate(-69.73 -6.7)"></path>
<path d="M87.9 6.7h2.5v1.162h-1.43v1.966H90v1.206h-1.028v2.055H90.4v1.117h-2.5z" fill="#5d3fbf" transform="translate(-77.088 -6.7)"></path>
<path d="M100.562 10.319l-.089-.357h-.045v4.244H99.4V6.7h.983l1.072 3.887.089.357h.045V6.7h1.028v7.506h-.983z" fill="#5d3fbf" transform="translate(-83.45 -6.7)"></path>
<path d="M112.2 7.862V6.7h3.172v1.162h-1.028v6.344h-1.117V7.862z" fill="#5d3fbf" transform="translate(-90.531 -6.7)"></path>
</g>
</g>
<g transform="translate(7.551 6.523)">
<path d="M0 0H10.008V2.895H0z" fill="#ffc200"></path>
<path d="M23.557 28.1H16.9v-2.9h7.193z" fill="#fff" transform="translate(-16.9 -20.464)"></path>
<path d="M0 0H10.231V2.895H0z" fill="#fff" transform="translate(0 9.472)"></path>
</g>
</svg>
</a>
<div class="hidden w-full max-w-sm md:block lg:pl-8">
<button @click="openSearch = true" class="w-full max-w-sm bg-white border rounded-2xl px-3 py-2 cursor-text" style="background-color: white !important;" type="button">
<div class="flex items-center space-x-2">
<span class="text-gray-500">
<svg class="w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" fill-rule="evenodd"></path>
</svg>
</span>
<span :class="{ 'text-gray-300': !query }" class="min-w-5 truncate">
                                    {{ (query==null||query=='' ? '참여하고 싶은 행사를 검색해 보세요':query) }}
                                </span>
</div>
</button>
</div>
</div>
<div class="flex space-x-4 lg:hidden">
<ev-button @click="track('홈 호스트센터 클릭')" class="h-8 px-4 text-xs bg-primary-50 rounded-lg border-none" href="/hostcenter">
                        호스트센터
                    </ev-button>
<button @click="openAside = !openAside" class="text-primary-500" type="button">
<svg class="w-5 h-5" fill="currentColor" v-if="!openAside" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" fill-rule="evenodd"></path>
</svg>
<svg aria-hidden="true" class="w-5 h-5" fill="currentColor" v-else="" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" fill-rule="evenodd"></path>
</svg>
</button>
</div>
<div class="hidden lg:block h-full">
<div class="flex items-center space-x-4 lg:space-x-6 h-full">
<ui-menu as="div" class="relative" v-if="user.isAuthenticated ">
<ui-menu-button as="button">
<div class="flex items-center">
<span class="notranslate" v-if="language === 'ko'">
<span class="font-bold pr-1">
                    {{ getUserLastName() }}
                </span>
<span class="pr-1">님</span>
</span>
<span class="font-bold pr-1 notranslate" v-else="">
                {{ user.name }}
            </span>
<svg class="fill-current h-4 w-4" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path>
</svg>
</div>
</ui-menu-button>
<ui-transition-root as="template" enter="transition ease-out duration-100" enter-from="opacity-0" enter-to="opacity-100" leave="transition ease-in duration-75" leave-from="opacity-100" leave-to="opacity-0">
<ui-menu-items class="flex absolute right-0 z-50 flex-col mt-2 w-52 min-w-max bg-white rounded-md border focus:outline-none shadow-lg origin-top-right notranslate">
<template v-if="user.isAuthenticated">
<div class="flex flex-col py-3 px-4 text-xs space-y-2">
<div class="text-sm">
<b>{{ user.name }}</b><span v-if="language === 'ko'">님</span>
</div>
<div class="text-primary-400 whitespace-nowrap text-sm" v-if="2 &gt;= 99">
<a href="/solution/events">{{ user.email }}</a>
</div>
<div class="text-primary-400 whitespace-nowrap" v-else="">
                        {{ user.email }}
                    </div>
<a class="text-gray-500 text-xs" href="/mypage/account-settings" v-if="user.isAuthenticated">
<span v-if="language === 'ko'">내 정보 수정 &gt;</span>
<span v-else="">My info &gt;</span>
</a>
</div>
</template>
<div class="border-t"></div>
<ui-menu-item v-slot="{ active }">
<a class="px-4 py-2 hover:bg-gray-50 text-xs" href="/mypage/allevent">
<span v-if="language === 'ko'">신청 행사</span>
<span v-else="">Application Details</span>
</a>
</ui-menu-item>
<ui-menu-item v-slot="{ active }">
<a class="px-4 py-2 hover:bg-gray-50 text-xs" href="/mypage/FavoriteEvent">
<span v-if="language === 'ko'">관심 행사</span>
<span v-else="">Favorite Events</span>
</a>
</ui-menu-item>
<ui-menu-item v-slot="{ active }">
<a class="px-4 py-2 hover:bg-gray-50 text-xs" href="/mypage/subscriptions">
<span v-if="language === 'ko'">구독 채널</span>
<span v-else="">Subscribed Channels</span>
</a>
</ui-menu-item>
<template v-if="user.isAuthenticated">
<div class="border-t"></div>
<button @click="logout" class="text-danger-500 px-4 pb-3 pt-3 hover:bg-gray-50 text-xs" type="button">
<span v-if="language === 'ko'">로그아웃</span>
<span v-else="">Logout</span>
</button>
</template>
</ui-menu-items>
</ui-transition-root>
</ui-menu>
<div v-else="">
<a :href="`/account/login?ReturnUrl=${user.rawUrl}`">
<span v-if="language === 'ko'">로그인</span>
<span v-else="">Login</span>
</a>
</div>
<div v-if="!user.isAuthenticated">
<a href="/account/usersignup">
<span v-if="language === 'ko'">회원가입</span>
<span v-else="">Sign up</span>
</a>
</div>
<div>
<ev-button @click="track('홈 호스트센터 클릭')" class="py-2 text-xs bg-primary-50 rounded-lg border-none" href="/hostcenter" small="">
                                호스트센터
                            </ev-button>
</div>
</div>
</div>
</div>
</div>
<div class="absolute bg-[#292a2b] py-8 h-auto justify-center">
</div>
<div class="container py-0 md:hidden">
<button @click="openSearch = true" class="w-full bg-white border rounded px-3 py-2 cursor-text" style="background-color: white !important;" type="button">
<span :class="{ 'text-gray-300': !query }" class="min-w-5 truncate">
                        {{ (query==null||query=='' ? '참여하고 싶은 행사를 검색해 보세요':query) }}
                    </span>
</button>
</div>
<div class="container h-16 py-0 flex items-center overflow-x-auto space-x-2 whitespace-nowrap lg:space-x-3" v-if="isCategoryExposed == 'True'">
<div class="hidden md:inline-block">
<div class="flex items-center">
<span class="mr-2" v-if="language === 'ko'">카테고리</span>
<span class="mr-2" v-else="">Categories</span>
<svg class="fill-current h-4 w-4" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path>
</svg>
</div>
</div>
<div class="absolute z-50 !-ml-4 hidden md:inline-block">
<div class="group inline-block relative text-transparent">
<button class="text-gray-700 font-semibold py-2 px-4 rounded inline-flex items-center">
<span class="mr-2 text-transparent">카테고리</span>
<svg class="fill-current h-4 w-4 text-transparent" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path>
</svg>
</button>
<div class="absolute hidden min-w-[240px] w-max bg-white border-solid border-[1px] rounded-md border-gray-200 px-3 pb-5 pt-4 group-hover:block active:!opacity-100">
<div class="grid grid-cols-2">
<div :key="'newCaterory' + index" class="py-2 px-3 w-fit" v-for="(item, index) in newCategories" v-show="item.type!='m_gita'">
<a :href="item.url" class="text-gray-500 text-sm hover:!text-gray-900 focus:!text-primary-400 focus:!font-bold">
<span v-if="language === 'ko'">{{item.title}}</span>
<span v-else="">{{item.titleEn}}</span>
</a>
</div>
</div>
<div class="pt-4 px-2">
<a class="block text-center py-2.5 w-full text-xs bg-primary-50 rounded-md cursor-pointer" href="/search?order=score&amp;date=모든날&amp;page=1">
                                전체 카테고리
                            </a>
</div>
</div>
</div>
</div>
<ui-popover class="!ml-0 inline-block md:hidden" v-slot="{ open }">
<ui-popover-button>
<div class="flex items-center">
<span class="mr-2" v-if="language === 'ko'">카테고리</span>
<span class="mr-2" v-else="">Categories</span>
<svg class="fill-current h-4 w-4" v-show="!open" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path>
</svg>
<svg class="fill-current h-4 w-4" fill="currentColor" v-show="open" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" fill-rule="evenodd"></path>
</svg>
<div class="hidden">{{openCategory=open}}</div>
</div>
</ui-popover-button>
<ui-popover-panel class="flex absolute right-0 z-50 flex-col pt-10 w-full min-w-max bg-white focus:outline-none shadow-lg origin-top-right h-full" v-slot="{ close }">
<div class="pb-5 px-2.5">
<div :class="'grid gap-3.5 mx-1.5 ' + (language === 'ko' ? 'grid-cols-3' : 'grid-cols-2')">
<a :href="item.url" class="text-center text-[13px] py-2 border-gray-200 border-[1px] rounded-md hover:bg-gray-100 shadow-sm" v-for="(item, index) in m_newCategories">
<span v-if="language === 'ko'">{{item.title}}</span>
<span v-else="">{{item.titleEn}}</span>
</a>
</div>
<div class="mx-1.5 pt-6">
<div>
<a class="block text-center py-2.5 w-full text-xs bg-primary-50 rounded-md cursor-pointer" href="/search?order=score&amp;date=모든날&amp;page=1">
                                    전체 카테고리
                                </a>
</div>
</div>
</div>
</ui-popover-panel>
</ui-popover>
<a :href="category.url" :key="'category' + index" @click="calenderOrMapClick(category.title)" class="hover:text-primary-500 px-2 py-4" v-for="(category, index) in categories">
<template v-if="category.promotion">
<span class="text-primary-400 mr-1">
                        •
                    </span>
<span class="font-bold">
                        {{ category.title }}
                    </span>
</template>
<template v-else="">
<span :class="category.title=='행사 캘린더'||category.title=='행사 지도'?'font-bold':''" v-if="language === 'ko'">{{ category.title }}</span>
<span v-else="">{{ category.titleEn }}</span>
</template>
</a>
<div class="text-gray-200">|</div>
<div class="text-primary-400 font-bold">
<a @click="track('홈 행사개설 클릭')" href="/hostcenter/channel">
<span v-if="language === 'ko'">무료행사개설</span>
<span v-else="">Host your event for free</span>
</a>
</div>
</div>
</nav>
<ui-transition-root :show="myMenu" as="template">
<ui-dialog as="aside" class="flex fixed inset-0 top-16 md:top-20 z-300 lg:hidden">
<ui-transition-child as="template" enter="transition ease-in-out duration-300" enter-from="translate-x-full" enter-to="translate-x-0" leave="transition ease-in-out duration-300" leave-from="translate-x-0" leave-to="translate-x-full">
<nav class="flex relative flex-col flex-1 w-full h-full justify-between bg-gray-900 px-5 pt-4 pb-10">
<div class="flex flex-col space-y-6 text-white">
<div @click="myMenu = !myMenu" class="flex flex-row space-x-4 text-gray-500 fill-gray-500 text-xs">
<svg class="h-5 w-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" fill-rule="evenodd"></path>
</svg>
<span>메뉴로 돌아가기</span>
</div>
<div class="rounded-full w-[73px] aspect-1 bg-primary-400 flex items-center justify-center text-[25px]">
                        {{ getUserLastName() }}
                    </div>
<div class="flex flex-col space-y-1.5">
<div class="text-sm">
<span class="font-bold">{{ user.name }}</span> 님
                        </div>
<div class="text-xs">
                            {{ user.email }}
                        </div>
</div>
<a class="flex flex-row space-x-1 text-gray-500 text-xs" href="/mypage/account-settings">
<div>내 정보 수정</div>
<svg class="h-5 w-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
<div class="flex flex-col space-y-2">
<a class="text-[14px] bg-gray-800 rounded-md px-4 py-5 flex flex-row justify-between items-center" href="/mypage/allevent">
<span>신청 행사</span>
<svg class="h-5 w-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
<a class="text-[14px] bg-gray-800 rounded-md px-4 py-5 flex flex-row justify-between items-center" href="/mypage/favoriteevent">
<span>관심 행사</span>
<svg class="h-5 w-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
<a class="text-[14px] bg-gray-800 rounded-md px-4 py-5 flex flex-row justify-between items-center" href="/mypage/subscriptions">
<span>구독 채널</span>
<svg class="h-5 w-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
</div>
</div>
<div class="flex flex-col px-0">
<a @click="logout" class="text-danger-500" type="button">
                        로그아웃
                    </a>
</div>
</nav>
</ui-transition-child>
</ui-dialog>
</ui-transition-root>
<ui-transition-root :show="myChannelBtn" as="template">
<ui-dialog as="aside" class="flex fixed inset-0 top-16 md:top-20 z-300 lg:hidden">
<ui-transition-child as="template" enter="transition ease-in-out duration-300" enter-from="translate-x-full" enter-to="translate-x-0" leave="transition ease-in-out duration-300" leave-from="translate-x-0" leave-to="translate-x-full">
<nav class="flex relative flex-col flex-1 w-full h-full justify-between bg-gray-900 pt-4 pb-10">
<div class="flex flex-col space-y-6 text-white h-full">
<div @click="myChannelBtn = !myChannelBtn" class="flex flex-row space-x-4 text-gray-500 fill-gray-500 text-xs px-5">
<svg class="h-5 w-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" fill-rule="evenodd"></path>
</svg>
<span>메뉴로 돌아가기</span>
</div>
<div class="h-full" v-if="user.isAuthenticated">
<div class="">
<div class="sm:pb-0">
<div class="mt-4">
<div>
<nav class="-mb-px h-12">
<div class="grid grid-cols-2 h-full">
<a :class="{ [ channelActive=='channel' ? 'bg-gray-800 font-bold' : '' ]: true }" @click="channelActive='channel'" class="flex justify-center items-center text-gray-50 font-normal text-sm cursor-pointer">
                                                    채널
                                                </a>
<a :class="{ [ channelActive=='event' ? 'bg-gray-800' : '' ]: true }" @click="channelActive='event'" class="flex justify-center items-center text-gray-50 font-normal text-sm cursor-pointer">
                                                    최근 본 행사
                                                </a>
</div>
</nav>
</div>
</div>
</div>
</div>
<div class="p-5 bg-gray-800 h-full">
<div class="" v-show="channelActive=='channel'">
<div class="">
<ev-input @keyup.enter="onEnterSearchInput" class="text-gray-900" placeholder="채널명" v-model="searchInput">
</ev-input>
</div>
<div class="pt-8 pb-8">
<div class="flex justify-between items-center">
<div class="font-bold text-xs">
                                            채널 리스트
                                        </div>
<div class="flex flex-row space-x-2">
<ui-listbox v-model="channelEvent.SortType">
<div class="relative w-24">
<ui-listbox-button class="relative w-full cursor-pointer pl-2 pr-7 text-gray-50 focus:outline-none focus-visible:border-indigo-500 focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75 focus-visible:ring-offset-2 focus-visible:ring-offset-orange-300 sm:text-sm">
<span class="block truncate text-right text-xs">
                                                            {{channelEvent.SortType.name}}
                                                        </span>
<span class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2">
<svg class="fill-current h-4 w-4" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path>
</svg>
</span>
</ui-listbox-button>
<transition leave-active-class="transition duration-100 ease-in" leave-from-class="opacity-100" leave-to-class="opacity-0">
<ui-listbox-options class="absolute mt-1 max-h-60 w-full overflow-auto rounded-md bg-white space-y-1 py-2 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm">
<ui-listbox-option :key="filter.name" :value="filter" as="template" v-for="filter in channelEvent.Filter" v-slot="{ active, selected }">
<li @click="channelFilter=filter.value" class="px-4 py-1 cursor-pointer font-normal text-gray-500 text-xs">
<span>{{ filter.name }}</span>
</li>
</ui-listbox-option>
</ui-listbox-options>
</transition>
</div>
</ui-listbox>
</div>
</div>
</div>
<div class="flex flex-col space-y-1 overflow-y-auto pb-4 h-[calc(100vh-442px)]">
<div class="" v-for="item in myChannel">
<div class="flex justify-between items-center py-2.5">
<div class="flex items-center">
<div class="w-10 h-10">
<img :src="blobImageUrl(item.TopLogoImageUrl)" class="rounded-full border" v-if="item.TopLogoImageUrl"/>
<div class="rounded-full w-full h-full flex justify-center items-center text-white bg-primary-400" v-else="">
                                                        {{ item.Title ? item.Title[0] : "" }}
                                                    </div>
</div>
<div class="pl-4 pr-2 text-base text-ellipsis overflow-x-hidden whitespace-nowrap max-w-[calc(100vw-104px)]">
<a :href="'/hostcenter/channel/'+item.SubDomain">{{item.Title}}</a>
</div>
<div v-show="item.mainChannel">
<svg class="w-5 h-5 text-primary-400" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
</svg>
</div>
</div>
</div>
</div>
</div>
<div>
<div class="">
<div class="pt-6">
<a class="h-14 flex justify-center items-center bg-gray-700 font-normal text-white text-base w-full border border-solid border-gray-700" href="/hostcenter/channelcreate">
<span>새 채널 만들기</span>
</a>
</div>
</div>
</div>
</div>
<div class="h-full" v-show="channelActive=='event'">
<div class="grid grid-cols-2" v-if="recentEvent.length &gt; 5">
<div class="p-1 pb-4" v-for="event in recentEvent">
<a :href="'/hostcenter/channel/'+event.SubDomain+'/'+event.ProjectId+'/overview'" @click="addRecentEvent(event)">
<div>
<img :src="blobImageUrl(event.CoverImageUrl)" class="rounded-md" v-if="event.CoverImageUrl"/>
<img class="rounded-md" src="/Content/neweventus/image/eventsBI/event-default-img.jpg" v-else=""/>
</div>
<div class="pt-2 overflow-hidden text-ellipsis line-clamp-2" style="-webkit-box-orient: vertical; display: -webkit-box;">
                                                {{event.Title}}
                                            </div>
</a>
</div>
</div>
<div class="flex justify-center h-full items-center" v-else="">
<div>
                                        최근 본 행사가 없습니다.
                                    </div>
</div>
</div>
</div>
</div>
<div class="p-8" v-else="">
<div>
                            로그인 후 이용해주세요.
                        </div>
<div class="pt-3">
<ev-button class="bg-primary-500">로그인</ev-button>
</div>
</div>
</div>
</nav>
</ui-transition-child>
</ui-dialog>
</ui-transition-root>
<ui-transition-root :show="openAside" as="template">
<ui-dialog as="aside" class="flex fixed inset-0 z-40 lg:hidden">
<ui-transition-child as="template" enter="transition ease-in-out duration-300" enter-from="translate-x-full" enter-to="translate-x-0" leave="transition ease-in-out duration-300" leave-from="translate-x-0" leave-to="translate-x-full">
<nav class="flex relative flex-col flex-1 w-full bg-white">
<div class="flex justify-between items-center px-4 h-16">
<div class="flex items-center">
<div v-if="user.isAuthenticated">
<b>{{ user.name }}</b>님
                        </div>
<div v-else="">
<a :href="`/account/login?ReturnUrl=${user.rawUrl}`" class="text-gray-500 font-bold">
                                로그인 해주세요
                            </a>
</div>
</div>
<div class="flex items-center">
<button @click="openAside = false" class="text-primary-500" type="button">
<span class="sr-only">Close sidebar</span>
<svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" fill-rule="evenodd"></path>
</svg>
</button>
</div>
</div>
<div class="overflow-y-auto flex-1 p-4 space-y-4">
<div class="flex flex-col space-y-4 mb-10" v-if="user.isAuthenticated">
<div class="text-gray-900">{{ user.email}} </div>
<a class="flex flex-row space-x-1 text-gray-500 text-xs" href="/mypage/account-settings">
<div>내 정보 수정</div>
<svg class="h-5 w-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
</div>
<div class="flex flex-col space-y-2">
<a class="text-[14px] bg-gray-100 rounded-md px-4 py-5 flex flex-row justify-between items-center" href="/mypage/allevent">
<span>신청 행사</span>
<svg class="h-5 w-5 text-gray-300" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
<a class="text-[14px] bg-gray-100 rounded-md px-4 py-5 flex flex-row justify-between items-center" href="/mypage/cancelled" v-if="user.isAuthenticated">
<span>취소 내역</span>
<svg class="h-5 w-5 text-gray-300" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
<a class="text-[14px] bg-gray-100 rounded-md px-4 py-5 flex flex-row justify-between items-center" href="/mypage/favoriteevent" v-if="user.isAuthenticated">
<span>관심 행사</span>
<svg class="h-5 w-5 text-gray-300" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
<a class="text-[14px] bg-gray-100 rounded-md px-4 py-5 flex flex-row justify-between items-center" href="/mypage/subscriptions" v-if="user.isAuthenticated">
<span>구독 채널</span>
<svg class="h-5 w-5 text-gray-300" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
<a class="text-[14px] bg-gray-100 rounded-md px-4 py-5 flex flex-row justify-between items-center" href="/mypage/inquiries" v-if="user.isAuthenticated">
<span>문의 내역</span>
<svg class="h-5 w-5 text-gray-300" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</a>
</div>
</div>
<div>
<div class="flex items-center px-4 h-16 border-t space-x-4">
<template v-if="user.isAuthenticated">
<button @click="logout" class="flex items-center text-danger-400" type="button">
<span>로그아웃</span>
</button>
</template>
<template v-else="">
<a :href="`/account/login?ReturnUrl=${user.rawUrl}`" class="flex items-center space-x-2">
<span>로그인</span>
</a>
<span class="text-gray-200">|</span>
<a class="flex items-center" href="/account/usersignup">
                                회원가입
                            </a>
</template>
</div>
</div>
</nav>
</ui-transition-child>
</ui-dialog>
</ui-transition-root>
<ui-transition-root :show="openSearch" as="template">
<ui-dialog @close="openSearch = false" as="div" class="fixed z-10 inset-0 overflow-auto">
<ui-transition-child as="template" enter="ease-out duration-300" enter-from="opacity-0" enter-to="opacity-100" leave="ease-in duration-200" leave-from="opacity-100" leave-to="opacity-0">
<div class="fixed inset-0 bg-black/75 transition-opacity"></div>
</ui-transition-child>
<ui-transition-child :after-enter="focusQuery()">
<ui-dialog-panel class="relative inline-block bg-white w-full min-h-screen sm:min-h-fit">
<div class="flex justify-center">
<div class="w-full max-w-xl p-4 sm:pb-8">
<form @submit.prevent="serachSubmit" action="/search" method="get" ref="layoutSearchForm">
<div class="space-y-6">
<div class="flex items-center space-x-4">
<button @click="openSearch = false" class="text-gray-500 py-4 pr-2" type="button">
<svg class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M10 19l-7-7m0 0l7-7m-7 7h18" stroke-linecap="round" stroke-linejoin="round"></path>
</svg>
</button>
<div class="relative flex-1">
<div class="absolute flex inset-y-0 left-0 items-center px-6 z-20">
<button class="text-gray-500" type="submit">
<svg class="w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" fill-rule="evenodd">
</path>
</svg>
</button>
</div>
<input @keyup="getSuggest()" autocomplete="off" class="pr-6 pl-14 w-full h-12 text-ellipsis bg-white rounded-md drop-shadow-sm" id="query" name="query" placeholder="참여하고 싶은 행사를 검색해보세요" ref="queryInput" type="search"/>
</div>
</div>
<div class="space-y-4" v-show="suggest.length">
<div class="flex justify-between items-center">
<div class="text-primary-400 text-lg">
                                            행사
                                        </div>
<div class="text-xs" v-show="useSearchHistory">
<button class="text-gray-500" type="submit">
                                                검색 결과 더 보기
                                            </button>
</div>
</div>
<a :href="getSearchUrl(sug.title.raw)" :key="sug.id.raw" :tabindex="idx" :title="sug.title.raw" @click="beforeSearch(sug.title.raw)" class="block truncate" v-dompurify-html="sug.title.snippet ?? sug.title.raw" v-for="(sug, idx) in suggest.slice(0, 5)">
</a>
</div>
<div class="space-y-4" v-show="!suggest.length">
<div class="flex justify-between items-center">
<div class="text-primary-400 text-lg">
                                            최근 검색어
                                        </div>
<div class="text-xs">
<button @click="toggleUseSearchHistory" class="text-gray-500" type="button">
                                                검색 기록 {{ useSearchHistory ? '끄기' : '켜기' }}
                                            </button>
<template v-if="useSearchHistory">
<span class="px-2 text-gray-500">|</span>
<button @click="searchHistoryRemove(null)" class="text-gray-500" type="button">
                                                    검색 기록 삭제
                                                </button>
</template>
</div>
</div>
<div class="grid grid-cols-1 sm:grid-cols-2 gap-2">
<div :key="searchHistory.HistoryId" class="flex items-center justify-between" v-for="searchHistory in orderedSearchHistories">
<a :href="getSearchUrl(searchHistory.Query)" :title="searchHistory.Query" @click="beforeSearch(searchHistory.Query)" class="truncate focus:bg-gray-100 min-w-5">
                                                {{ searchHistory.Query }}
                                            </a>
<button @click="searchHistoryRemove(searchHistory.HistoryId)" class="ml-2 px-2 text-gray-500 hover:text-gray-700" type="button">
<svg class="h-4 w-4" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" fill-rule="evenodd"></path>
</svg>
</button>
</div>
</div>
</div>
<div class="space-y-4" v-if="recommandSearchEvents.length">
<div class="text-primary-400 text-lg">
                                        추천 행사
                                    </div>
<div class="space-y-2">
<div class="grid grid-cols-2 gap-4">
<div v-for="item in recommandSearchEvents">
<ev-event-card :favorites="userFavoriteEvents" :item="item" :utm="{ source: 'eventus', medium: 'banner', campaign: 'main-searchbar' }" @on-click="onBannerClick('searcharea', item.pitId)">
</ev-event-card>
</div>
</div>
</div>
</div>
<div class="space-y-2">
<div class="text-primary-400 text-lg">
                                        지금 뜨는 검색어
                                    </div>
<div>
<div :class="showAllSearchTrends ? '' : 'h-24 overflow-y-hidden'">
<a :href="getSearchUrl(query.term)" @click="beforeSearch(query.term)" class="inline-block px-3 py-2 bg-white border rounded-md drop-shadow-sm text-xs mt-2 mr-2" v-for="query in analytics">
                                                {{ query.term }}
                                            </a>
</div>
<div>
<a :class="`w-full inline-block px-3 py-2 bg-white border rounded-md
                                               drop-shadow-sm text-xs text-center mt-2 mr-2
                                               ${showAllSearchTrends ? 'hidden' : ''}`" @click="showAllSearchTrends = true">
                                                + 더보기
                                            </a>
</div>
</div>
</div>
</div>
<input hidden="" name="order" type="hidden" value="score"/>
<input hidden="" name="date" type="hidden" value="모든날"/>
<input hidden="" name="page" type="hidden" value="1"/>
</form>
</div>
</div>
</ui-dialog-panel>
</ui-transition-child>
</ui-dialog>
</ui-transition-root>
</header>
<main class="min-h-screen" id="main">
<div id="pwa-prompt-popup">
<ev-modal :open="pwa.isOpened" class="w-full fixed bottom-0 my-0 rounded-b-none rounded-t-2xl">
<div class="flex flex-col items-center">
<img class="mb-6" src="/Content/neweventus/image/pwa-prompt-mobile-button.png"/>
<div class="text-xl">
                웹 어플리케이션을 설치하고
            </div>
<div class="text-xl font-bold mb-4">
                더 편하게 이벤터스를 이용해보세요.
            </div>
<ev-button @click="onClickPwaButton('Popup')" class="border-transparent bg-primary-50 text-primary-500 text-sm mb-6">
<div class="h-[15px] flex items-center" v-if="pwa.isDownloading">
<div class="dot-flashing"></div>
</div>
<div v-else="">
                    이벤터스 설치하기
                </div>
</ev-button>
<div @click="onClosePwaPopup" class="text-gray-500 underline">오늘은 그냥 볼게요</div>
</div>
</ev-modal>
</div>
<style>
    .dot-flashing {
        position: relative;
        width: 10px;
        height: 10px;
        border-radius: 5px;
        background-color: #9880ff;
        color: #9880ff;
        animation: dotFlashing 1s infinite linear alternate;
        animation-delay: .5s;
    }

    .dot-flashing::before,
    .dot-flashing::after {
        content: '';
        display: inline-block;
        position: absolute;
        top: 0;
    }

    .dot-flashing::before {
        left: -15px;
        width: 10px;
        height: 10px;
        border-radius: 5px;
        background-color: #9880ff;
        color: #9880ff;
        animation: dotFlashing 1s infinite alternate;
        animation-delay: 0s;
    }

    .dot-flashing::after {
        left: 15px;
        width: 10px;
        height: 10px;
        border-radius: 5px;
        background-color: #9880ff;
        color: #9880ff;
        animation: dotFlashing 1s infinite alternate;
        animation-delay: 1s;
    }

    @keyframes dotFlashing {
        0% {
            background-color: #9880ff;
        }

        50%,
        100% {
            background-color: #ebe6ff;
        }
    }
</style><div id="loginpopupApp">
<ev-modal :open="isOpen" @close="isOpen = false" class="mx-8 md:max-w-[354px] !p-0">
<div class="">
<a :href="getUtm(data.Click_Url)" @click="targetClick(data)" class="cursor-pointer">
<img :src="data.ImageUrl" class="w-full"/>
</a>
<div class="grid grid-cols-2 h-12 md:h-14 border-r divide-x divide-gray-100">
<a @click="hideLoginpopup()" class="flex justify-center items-center cursor-pointer">오늘 하루 보지 않기</a>
<a @click="isOpen = false" class="flex justify-center items-center cursor-pointer">닫기</a>
</div>
</div>
</ev-modal>
</div>
<script>
    docReady(() => {
        ui.createApp({
            data() {
                return {
                    isOpen: false,
                    data: [],
                    user: asp.user,
                };
            },
            methods: {
                targetClick(item) {
                    if (location.host === 'event-us.kr' && item.Id) {
                        axios.post('/userhelpers/targetclick', { targetid: item.Id });
                    }
                },
                hideLoginpopup() {
                    const midnight = new Date();
                    midnight.setHours(24, 0, 0, 0);
                    document.cookie = `hideLoginpopup=true; expires=${midnight.toUTCString()}; path=/`;
                    this.isOpen = false;
                },
                getUtm(_url) {
                    const url = new URL(_url);
                    if (!url.hostname.includes('event-us.kr')) {
                        return _url;
                    }
                    const utm = {
                        source: 'eventus',
                        medium: 'banner',
                        campaign: 'login-popup',
                    };
                    if (!url.searchParams.has('utm_source')) {
                        url.searchParams.set('utm_source', utm.source);
                    }
                    if (!url.searchParams.has('utm_medium')) {
                        url.searchParams.set('utm_medium', utm.medium);
                    }
                    if (!url.searchParams.has('utm_campaign')) {
                        url.searchParams.set('utm_campaign', utm.campaign);
                    }
                    return url.href;
                },
            },
            mounted() {
                const self = this;
                const referrer = document.referrer.toLowerCase();
                const currentUrl = location.href.toLowerCase();

                const isAfterLogin = referrer.includes('/account/login') || referrer.includes('/account/googlelogincallback') || referrer.includes('/account/kakao') || referrer.includes('/account/userprofile');
                const isAllowedPage = !currentUrl.includes('/hostcenter') && !currentUrl.includes('/solution') && !currentUrl.includes('/applicant');
                const isAllowedCookie = util.getCookie('hideLoginpopup') !== 'true';

                if (isAfterLogin && isAllowedPage && isAllowedCookie && self.user.isAuthenticated) {
                    axios.post('/home/GetLoginPopUpData').then(function (result) {
                        if (result.data) {
                            self.data = result.data;
                            self.isOpen = true;
                        }
                    });
                }
            },
        }).mount('#loginpopupApp');
    });
</script>
<div id="app">
<div class="container space-y-4 mb-16 sm:mb-32">
<section class="empty:h-96 empty:sm:h-64">
<ev-swiper :items="banners" :options="bannerOptions" ads="" class="notranslate" more-button="">
<template v-slot="{ item }">
<a :href="getSearchpageBannerUtm(item)" @click="onBannerClick('search', item.Id,item.Click_Url)" target="_blank">
<div class="relative aspect-w-11 aspect-h-8 sm:aspect-w-14 md:aspect-h-3">
<img :alt="item.BannerTitle" :src="item.M_ImageUrl" class="object-cover sm:hidden optimize">
<img :alt="item.BannerTitle" :src="item.ImageUrl" class="hidden object-cover sm:block optimize"/>
<div class="absolute inset-0">
<div class="flex justify-center items-center w-full h-full sm:justify-start">
<div class="text-center sm:pl-8 sm:text-left">
<div class="space-y-2">
<div :style="{ color: bannerColor(item).description }" class="text-base xl:text-xl lg:text-lg" v-dompurify-html="replaceEnter(item.BannerTitle)"></div>
<div :style="{ color: bannerColor(item).title }" class="text-xl font-bold sm:hidden" v-dompurify-html="replaceEnter(item.BannerDescription)"></div>
<div :style="{ color: bannerColor(item).title }" class="hidden sm:block text-xl font-bold xl:text-3xl lg:text-2xl md:text-xl" v-dompurify-html="replaceEnter(item.BannerDescription)"></div>
</div>
<div class="mt-10 text-base font-bold sm:flex sm:space-x-8 sm:mt-6 xl:text-xl xl:mt-14 lg:text-lg lg:mt-8 md:text-base" v-if="item.BannerDate &amp;&amp; item.BannerPlace">
<div :style="{ color: bannerColor(item).title }" v-dompurify-html="item.BannerDate"></div>
<div :style="{ color: bannerColor(item).title }" class="mt-2 sm:mt-0" v-dompurify-html="item.BannerPlace"></div>
</div>
</div>
</div>
</div>
</img></div>
</a>
</template>
<template v-slot:modal-item="{ item }">
<div class="aspect-w-11 aspect-h-8 md:aspect-w-14 md:aspect-h-3 basis-full swiper-image-zoom">
<img :alt="item.BannerTitle" :src="item.M_ImageUrl" class="md:hidden object-cover"/>
<img :alt="item.BannerTitle" :src="item.ImageUrl" class="hidden md:block object-cover"/>
<div class="container">
<a :href="getSearchpageBannerUtm(item)" @click="onBannerClick({type: 'main', pitId: item.Id, clickurl:item.Click_Url})" class="h-full flex items-center xl:pt-8 xl:px-8" target="_blank">
<div :style='{color: item.Banner.color.title ?? "#ffffff"}' class="h-1/2 flex flex-col justify-between sm:h-full sm:justify-around">
<div class="space-y-2">
<div :style="{ color: bannerColor(item).description }" class="text-base xl:text-xl lg:text-lg" v-dompurify-html="replaceEnter(item.BannerTitle)"></div>
<div :style="{ color: bannerColor(item).title }" class="text-xl font-bold sm:hidden" v-dompurify-html="replaceEnter(item.BannerDescription)"></div>
<div :style="{ color: bannerColor(item).title }" class="hidden sm:block text-xl font-bold xl:text-3xl lg:text-2xl md:text-xl" v-dompurify-html="replaceEnter(item.BannerDescription)"></div>
</div>
<div class="font-bold text-base md:flex md:space-x-8 xl:text-xl">
<div>{{ item.BannerDate }}</div>
<div>{{ item.BannerPlace }}</div>
</div>
</div>
</a>
</div>
</div>
</template>
<template #container="">
<div class="hidden xl:group-hover:block absolute z-10 top-1/2 left-0" id="bannerLeftArrow">
<button class="prev w-8 h-8 bg-black/50 flex items-center justify-center" type="button">
<svg class="h-5 w-5 text-white" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M15 19l-7-7 7-7" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path>
</svg>
</button>
</div>
<div class="hidden xl:group-hover:block absolute z-10 right-0" id="bannerRightArrow">
<button class="next w-8 h-8 bg-black/50 flex items-center justify-center" type="button">
<svg class="h-5 w-5 text-white" fill="none" stroke="currentColor" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M9 5l7 7-7 7" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path>
</svg>
</button>
</div>
</template>
</ev-swiper>
</section>
<div class="flex" v-show="inited">
<div class="hidden lg:block mr-8">
<div class="w-72">
<div class="bg-white w-full px-4 pt-4 pb-24 overflow-auto lg:overflow-visible lg:p-1 notranslate">
<div class="space-y-6">
<div class="flex justify-between items-center">
<div class="text-base text-primary-400">
<span v-if="language === 'ko'">필터</span>
<span v-else="">Filter</span>
</div>
<button @click="resetModel()" class="text-sm text-gray-500" type="button">
<span v-if="language === 'ko'">필터 초기화</span>
<span v-else="">Reset Filter</span>
</button>
</div>
<div class="space-y-4">
<div class="flex justify-between items-center">
<div class="font-bold">
<span v-if="language === 'ko'">일시</span>
<span v-else="">Date</span>
</div>
<div>
<a @click="onCalendarClick()" href="/search/calendar">
                        행사 캘린더 &gt;
                    </a>
</div>
</div>
<div class="space-y-2">
<ev-radio v-model="searchTriggerModel.date" value="모든날">
<span v-if="language === 'ko'">모든날</span>
<span v-else="">All Day</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.date" value="오늘">
<span v-if="language === 'ko'">오늘</span>
<span v-else="">Today</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.date" value="이번주">
<span v-if="language === 'ko'">이번주</span>
<span v-else="">This Week</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.date" value="이번달">
<span v-if="language === 'ko'">이번달</span>
<span v-else="">This Month</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.date" value="기간선택">
<span v-if="language === 'ko'">기간선택</span>
<span v-else="">Select Period</span>
</ev-radio>
<div v-show="searchTriggerModel.date === '기간선택'">
<ev-datepicker placeholder="기간을 선택하세요" v-if="language === 'ko'" v-model="pickedTime"></ev-datepicker>
<ev-datepicker placeholder="Please select period" v-else="" v-model="pickedTime"></ev-datepicker>
</div>
<ev-checkbox v-model="searchTriggerModel.includeEnd">
<span v-if="language === 'ko'">모집 종료 행사</span>
<span v-else="">Closed events</span>
<template #sub="">
<span v-if="language === 'ko'">모집 종료된 행사까지 포함하여 보기</span>
<span v-else="">View all events (including closed events)</span>
</template>
</ev-checkbox>
</div>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">지역</span>
<span v-else="">Region</span>
</div>
<select class="block w-full px-4 py-2 border focus:outline-none focus:ring-primary-400 focus:border-primary-400 rounded-md text-gray-500" v-model="searchTriggerModel.area">
<option selected="selected" v-if="language === 'ko'" value="">전체</option>
<option selected="selected" v-else="" value="">All</option>
<option :value="item" v-for="item in areaItem">{{ language === 'ko' ? item : transEn[item] }}</option>
</select>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">행사분야</span>
<span v-else="">Event Categories</span>
</div>
<div class="space-y-2">
<ev-checkbox v-for="cate in filtedCategories" v-model="categories[cate]">{{ language === 'ko' ? cate : transEn[cate] }}</ev-checkbox>
<button @click="categoryToggle()" class="text-gray-400 text-xs" type="button">
<span class="flex items-center">
<span v-if="language === 'ko'">
                                {{ categoryOpen ? '접기' : `${Object.keys(categories).length}개 모두 보기` }}
                            </span>
<span v-else="">
                                {{ categoryOpen ? 'Fold' : `View all ${Object.keys(categories).length} items` }}
                            </span>
<span>
<svg :class="categoryOpen ? '-rotate-90' : 'rotate-90'" class="h-4 w-4" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</span>
</span>
</button>
</div>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">행사유형</span>
<span v-else="">Types of Event</span>
</div>
<div class="space-y-2">
<ev-checkbox v-for="et in filtedEventtypes" v-model="eventtypes[et]">{{ language === 'ko' ? et : transEn[et] }}</ev-checkbox>
<button @click="eventtypeToggle()" class="text-gray-400 text-xs" type="button">
<span class="flex items-center">
<span v-if="language === 'ko'">
                                {{ eventtypeOpen ? '접기' : `${Object.keys(categories).length}개 모두 보기` }}
                            </span>
<span v-else="">
                                {{ eventtypeOpen ? 'Fold' : `View all ${Object.keys(categories).length} items` }}
                            </span>
<span>
<svg :class="eventtypeOpen ? '-rotate-90' : 'rotate-90'" class="h-4 w-4" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</span>
</span>
</button>
</div>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">참여 방법</span>
<span v-else="">How to apply</span>
</div>
<div class="space-y-2">
<ev-radio v-model="searchTriggerModel.eventsystemtype" value="all">
<span v-if="language === 'ko'">전체</span>
<span v-else="">All</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.eventsystemtype" value="온라인">
<span v-if="language === 'ko'">온라인</span>
<span v-else="">Online</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.eventsystemtype" value="오프라인">
<span v-if="language === 'ko'">오프라인</span>
<span v-else="">Offline</span>
</ev-radio>
</div>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">가격</span>
<span v-else="">Price</span>
</div>
<div class="space-y-2">
<ev-radio v-model="searchTriggerModel.costmin" value="all">
<span v-if="language === 'ko'">전체</span>
<span v-else="">All</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.costmin" value="무료">
<span v-if="language === 'ko'">무료</span>
<span v-else="">Free</span>
</ev-radio>
<div class="flex items-center justify-between">
<ev-radio v-model="searchTriggerModel.costmin" value="유료">
<span v-if="language === 'ko'">유료</span>
<span v-else="">Paid</span>
</ev-radio>
<span class="text-primary-400">{{ priceText }}</span>
</div>
<div class="relative space-y-4 px-3 py-4" v-if="searchTriggerModel.costmin === '유료'">
<ev-range :max="searchTriggerModel.priceMax" v-bind="sliderOption" v-model="searchTriggerModel.priceValue"></ev-range>
<div class="flex justify-between text-gray-400">
<div class="flex-1">
<div class="flex justify-start">
<div class="flex flex-col space-y-2">
<div class="flex h-2 justify-start">
<div class="border-l h-full"></div>
</div>
<div>
                                            0
                                        </div>
</div>
</div>
</div>
<div class="flex-1">
<div class="flex justify-center">
<div class="flex flex-col space-y-2">
<div class="flex h-2 justify-center">
<div class="border-l h-full"></div>
</div>
<div>
<span v-if="language === 'ko'">{{ searchTriggerModel.priceMax / 20 }}만원</span>
<span v-else="">{{ (searchTriggerModel.priceMax / 2 * 1000).toLocaleString() }}KRW</span>
</div>
</div>
</div>
</div>
<div class="flex-1">
<div class="flex justify-end">
<div class="flex flex-col space-y-2">
<div class="flex h-2 justify-end">
<div class="border-l h-full"></div>
</div>
<div>
<span v-if="language === 'ko'">무제한</span>
<span v-else="">Unlimited</span>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="space-y-4 p-4 pt-0 lg:hidden fixed inset-x-0 bottom-0 bg-white z-40">
<div class="border-t -mx-4"></div>
<ev-button @click="showFilter = false" class="bg-primary-500">
                    {{ eventCount.toString().replace(/\B(?=(\d{3})+(?!\d))/g,',',) }}개의 행사 보기
                </ev-button>
</div>
</div>
</div>
</div>
</div>
<div class="w-full">
<div class="space-y-6" id="eventSection">
<div class="lg:flex items-center justify-between">
<h1 class="text-xl space-x-1">
<span class="text-primary-400">
                                {{ toNumberWithCommas(eventCount) }}{{ eventCount === 10000 ? '+': ''}}
                            </span>
<span>개의 행사가 검색되었습니다</span>
</h1>
<div class="flex justify-between text-xs text-gray-400 mt-4 lg:mt-0">
<div class="flex space-x-4">
<button @click="searchTriggerModel.order = 'score'" class="flex items-center" type="button">
<span :class="{ 'text-gray-900 font-bold': searchTriggerModel.order === 'score' }">
<span v-if="language === 'ko'">추천순</span>
<span v-else="">Sort by Recommendation</span>
</span>
<div class="ml-1 group relative">
<svg class="h-4 w-4" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1
                                    1v4a1 1 0 102 0V6a1 1 0 00-1-1z" fill-rule="evenodd"></path>
</svg>
<div class="absolute hidden group-hover:block z-10 w-56 top-full left-1/2 -ml-12 lg:-ml-28">
<div class="p-2 border-x-0 rounded-md bg-black/75 text-xs text-white">
                                                이벤터스 추천순은 인기도, 신청률, 클릭률,<br/>
                                                검색정확도 점수 등을 고려하여 정렬됩니다.
                                            </div>
</div>
</div>
</button>
<button :class="{ 'text-gray-900 font-bold': searchTriggerModel.order === 'created' }" @click="searchTriggerModel.order = 'created'" type="button">
<span v-if="language === 'ko'">새 행사순</span>
<span v-else="">Sort by Latest</span>
</button>
<button :class="{ 'text-gray-900 font-bold': searchTriggerModel.order === 'duedate' }" @click="searchTriggerModel.order = 'duedate'" type="button">
<span v-if="language === 'ko'">모집 마감일순</span>
<span v-else="">Sort by Deadline</span>
</button>
</div>
<button @click="showFilter = true" class="flex items-center space-x-1 lg:hidden" type="button">
<svg class="h-5 w-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path d="M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z"></path>
</svg>
<span>
                                    필터({{ filterCount() }})
                                </span>
</button>
</div>
</div>
<div class="flex flex-nowrap overflow-x-scroll lg:flex-wrap lg:overflow-x-auto" v-show="filterBadges.length">
<div :key="i" class="bg-primary-400 text-white text-xs rounded-md px-3 py-2 flex font-light flex-shrink-0 m-1 notranslate" v-for="(filterBadge, i) in filterBadges">
                            {{ language === 'ko' ? filterBadge.title : transEn[filterBadge.title] }}
                            <button @click="filterBadge.onCancel" class="flex items-center ml-1">
<svg class="h-4 w-4" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" fill-rule="evenodd"></path>
</svg>
</button>
</div>
</div>
<div class="grid grid-cols-2 gap-4 sm:grid-cols-3" v-show="eventList.length">
<div :key="item.Id" class="mt-4" v-for="item in eventList">
<ev-event-card :favorites="userFavoriteEvents" :item="item" :utm="{ source: 'eventus', medium: 'organic', campaign: 'search-result', term: searchViewModel.query }" @on-click="eventClick">
</ev-event-card>
</div>
</div>
<div v-show="!eventList.length">
<div class="my-20 text-center">
<p class="text-base">선택하신 필터에 맞는 행사가 없습니다.</p>
<p class="text-base">다른 조건으로 선택하거나 초기화 해보세요.</p>
</div>
</div>
</div>
<div class="my-16" v-if="eventList.length">
<ev-pagination :max="searchMax" @change="focusEventSection" v-model="searchTriggerModel.page">
</ev-pagination>
</div>
<div class="space-y-6">
<div class="text-xl space-x-1">
<span class="text-primary-400">
                            {{ toNumberWithCommas(channelCount) }}
                        </span>
<span v-if="language === 'ko'">개의 채널</span>
<span v-else="">Channels</span>
</div>
<div class="grid grid-cols-2 gap-4 sm:grid-cols-4">
<div :key="i" v-for="(item, i) in channelList">
<ev-channel-card :item="item" :language="language" :subscriptions="userSubscribeChannels"></ev-channel-card>
</div>
</div>
<div class="mt-8 flex justify-center">
<a class="text-gray-500 underline" href="search/channel">
<span v-if="language === 'ko'">더 많은 채널 보기</span>
<span v-else="">View more channels</span>
</a>
</div>
</div>
</div>
</div>
<ui-transition-root :show="showFilter" as="template">
<ui-dialog as="aside" class="flex fixed inset-0 z-50 lg:hidden">
<ui-transition-child as="template" enter="transition ease-in-out duration-300" enter-from="translate-x-full" enter-to="translate-x-0" leave="transition ease-in-out duration-300" leave-from="translate-x-0" leave-to="translate-x-full">
<div class="bg-white w-full px-4 pt-4 pb-24 overflow-auto lg:overflow-visible lg:p-1 notranslate">
<div class="space-y-6">
<div class="flex justify-between items-center">
<div class="text-base text-primary-400">
<span v-if="language === 'ko'">필터</span>
<span v-else="">Filter</span>
</div>
<button @click="resetModel()" class="text-sm text-gray-500" type="button">
<span v-if="language === 'ko'">필터 초기화</span>
<span v-else="">Reset Filter</span>
</button>
</div>
<div class="space-y-4">
<div class="flex justify-between items-center">
<div class="font-bold">
<span v-if="language === 'ko'">일시</span>
<span v-else="">Date</span>
</div>
<div>
<a @click="onCalendarClick()" href="/search/calendar">
                        행사 캘린더 &gt;
                    </a>
</div>
</div>
<div class="space-y-2">
<ev-radio v-model="searchTriggerModel.date" value="모든날">
<span v-if="language === 'ko'">모든날</span>
<span v-else="">All Day</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.date" value="오늘">
<span v-if="language === 'ko'">오늘</span>
<span v-else="">Today</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.date" value="이번주">
<span v-if="language === 'ko'">이번주</span>
<span v-else="">This Week</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.date" value="이번달">
<span v-if="language === 'ko'">이번달</span>
<span v-else="">This Month</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.date" value="기간선택">
<span v-if="language === 'ko'">기간선택</span>
<span v-else="">Select Period</span>
</ev-radio>
<div v-show="searchTriggerModel.date === '기간선택'">
<ev-datepicker placeholder="기간을 선택하세요" v-if="language === 'ko'" v-model="pickedTime"></ev-datepicker>
<ev-datepicker placeholder="Please select period" v-else="" v-model="pickedTime"></ev-datepicker>
</div>
<ev-checkbox v-model="searchTriggerModel.includeEnd">
<span v-if="language === 'ko'">모집 종료 행사</span>
<span v-else="">Closed events</span>
<template #sub="">
<span v-if="language === 'ko'">모집 종료된 행사까지 포함하여 보기</span>
<span v-else="">View all events (including closed events)</span>
</template>
</ev-checkbox>
</div>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">지역</span>
<span v-else="">Region</span>
</div>
<select class="block w-full px-4 py-2 border focus:outline-none focus:ring-primary-400 focus:border-primary-400 rounded-md text-gray-500" v-model="searchTriggerModel.area">
<option selected="selected" v-if="language === 'ko'" value="">전체</option>
<option selected="selected" v-else="" value="">All</option>
<option :value="item" v-for="item in areaItem">{{ language === 'ko' ? item : transEn[item] }}</option>
</select>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">행사분야</span>
<span v-else="">Event Categories</span>
</div>
<div class="space-y-2">
<ev-checkbox v-for="cate in filtedCategories" v-model="categories[cate]">{{ language === 'ko' ? cate : transEn[cate] }}</ev-checkbox>
<button @click="categoryToggle()" class="text-gray-400 text-xs" type="button">
<span class="flex items-center">
<span v-if="language === 'ko'">
                                {{ categoryOpen ? '접기' : `${Object.keys(categories).length}개 모두 보기` }}
                            </span>
<span v-else="">
                                {{ categoryOpen ? 'Fold' : `View all ${Object.keys(categories).length} items` }}
                            </span>
<span>
<svg :class="categoryOpen ? '-rotate-90' : 'rotate-90'" class="h-4 w-4" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</span>
</span>
</button>
</div>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">행사유형</span>
<span v-else="">Types of Event</span>
</div>
<div class="space-y-2">
<ev-checkbox v-for="et in filtedEventtypes" v-model="eventtypes[et]">{{ language === 'ko' ? et : transEn[et] }}</ev-checkbox>
<button @click="eventtypeToggle()" class="text-gray-400 text-xs" type="button">
<span class="flex items-center">
<span v-if="language === 'ko'">
                                {{ eventtypeOpen ? '접기' : `${Object.keys(categories).length}개 모두 보기` }}
                            </span>
<span v-else="">
                                {{ eventtypeOpen ? 'Fold' : `View all ${Object.keys(categories).length} items` }}
                            </span>
<span>
<svg :class="eventtypeOpen ? '-rotate-90' : 'rotate-90'" class="h-4 w-4" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" fill-rule="evenodd"></path>
</svg>
</span>
</span>
</button>
</div>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">참여 방법</span>
<span v-else="">How to apply</span>
</div>
<div class="space-y-2">
<ev-radio v-model="searchTriggerModel.eventsystemtype" value="all">
<span v-if="language === 'ko'">전체</span>
<span v-else="">All</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.eventsystemtype" value="온라인">
<span v-if="language === 'ko'">온라인</span>
<span v-else="">Online</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.eventsystemtype" value="오프라인">
<span v-if="language === 'ko'">오프라인</span>
<span v-else="">Offline</span>
</ev-radio>
</div>
</div>
<div class="space-y-4">
<div class="font-bold">
<span v-if="language === 'ko'">가격</span>
<span v-else="">Price</span>
</div>
<div class="space-y-2">
<ev-radio v-model="searchTriggerModel.costmin" value="all">
<span v-if="language === 'ko'">전체</span>
<span v-else="">All</span>
</ev-radio>
<ev-radio v-model="searchTriggerModel.costmin" value="무료">
<span v-if="language === 'ko'">무료</span>
<span v-else="">Free</span>
</ev-radio>
<div class="flex items-center justify-between">
<ev-radio v-model="searchTriggerModel.costmin" value="유료">
<span v-if="language === 'ko'">유료</span>
<span v-else="">Paid</span>
</ev-radio>
<span class="text-primary-400">{{ priceText }}</span>
</div>
<div class="relative space-y-4 px-3 py-4" v-if="searchTriggerModel.costmin === '유료'">
<ev-range :max="searchTriggerModel.priceMax" v-bind="sliderOption" v-model="searchTriggerModel.priceValue"></ev-range>
<div class="flex justify-between text-gray-400">
<div class="flex-1">
<div class="flex justify-start">
<div class="flex flex-col space-y-2">
<div class="flex h-2 justify-start">
<div class="border-l h-full"></div>
</div>
<div>
                                            0
                                        </div>
</div>
</div>
</div>
<div class="flex-1">
<div class="flex justify-center">
<div class="flex flex-col space-y-2">
<div class="flex h-2 justify-center">
<div class="border-l h-full"></div>
</div>
<div>
<span v-if="language === 'ko'">{{ searchTriggerModel.priceMax / 20 }}만원</span>
<span v-else="">{{ (searchTriggerModel.priceMax / 2 * 1000).toLocaleString() }}KRW</span>
</div>
</div>
</div>
</div>
<div class="flex-1">
<div class="flex justify-end">
<div class="flex flex-col space-y-2">
<div class="flex h-2 justify-end">
<div class="border-l h-full"></div>
</div>
<div>
<span v-if="language === 'ko'">무제한</span>
<span v-else="">Unlimited</span>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="space-y-4 p-4 pt-0 lg:hidden fixed inset-x-0 bottom-0 bg-white z-40">
<div class="border-t -mx-4"></div>
<ev-button @click="showFilter = false" class="bg-primary-500">
                    {{ eventCount.toString().replace(/\B(?=(\d{3})+(?!\d))/g,',',) }}개의 행사 보기
                </ev-button>
</div>
</div>
</div>
</ui-transition-child>
</ui-dialog>
</ui-transition-root>
</div>
<div class="hidden" id="Iphone_message">
<div class="fixed bottom-5 z-50 w-full">
<div class="relative w-72 my-0 mx-auto p-4 border-x-0 rounded-md bg-black/75">
<div class="flex justify-between">
<div class="w-9 h-9">
<img src="https://eventusstorage.blob.core.windows.net/evs/images/main/eventus-icon.png"/>
</div>
<div class="text-xs text-white">
<div class="flex">
<span class="pr-1">아래에 있는</span>
<img class="h-3" src="https://eventusstorage.blob.core.windows.net/evs/images/main/iphone_home_btn_icon.svg"/>
<span>
                                눌러
                            </span>
</div>
<div>
<span class="text-warning-500">이벤터스를 홈 화면에 추가</span>해주세요!
                        </div>
<div>
                            더욱 빠르고 간편하게 이용하실 수 있습니다.
                        </div>
<div class="mt-2 flex space-x-4">
<div>
<a @click="Iphone_message_disabled()" class="underline py-0 border-none hover:text-gray-500">
                                    다시 표시하지 않기
                                </a>
</div>
<div>
<a @click="Iphone_message_close()" class="underline py-0 border-none hover:text-gray-500">
                                    닫기
                                </a>
</div>
</div>
</div>
</div>
<div class="absolute -bottom-2 inset-x-0 flex justify-center">
<div class="border-transparent border-t-black/75 border-t-8 border-l-8 border-r-8"></div>
</div>
</div>
</div>
</div>
</div>
<style lang="scss">
    .swiper-image-zoom {
        zoom: 0.7;
    }
</style>
</main>
<footer id="footer">
<div class="border-y">
<div class="container">
<div class="flex space-x-4">
<a class="text-gray-500 w-20" href="/notice/list">
<span v-if="language === 'ko'">공지사항</span>
<span v-else="">Announcements</span>
</a>
<a class="overflow-hidden text-ellipsis whitespace-nowrap text-gray-500" href="/notice/list">광고 상품 가격 변경 등 사전 안내</a>
</div>
</div>
</div>
<div class="bg-gray-50">
<div class="container space-y-4">
<div class="max-w-2xl space-y-4">
<div class="grid grid-cols-3 gap-2 sm:flex sm:justify-between">
<a href="https://www.zillinks.com/share/introduction/xd7MF9ZIbp/1">
<span v-if="language === 'ko'">회사 소개</span>
<span v-else="">Company</span>
</a>
<a href="/hostcenter">
<span v-if="language === 'ko'">서비스 소개</span>
<span v-else="">Products &amp; Solutions</span>
</a>
<a href="/notice/list">
<span v-if="language === 'ko'">공지사항</span>
<span v-else="">Announcements</span>
</a>
<a href="https://event-us-hostguide.oopy.io/348a2604-a70a-4a16-a970-73985c2c304d?v=17eb172f4a6643e688abc7149cc8d949" target="_blank">
<span v-if="language === 'ko'">자주 묻는 질문</span>
<span v-else="">FAQ</span>
</a>
<a href="https://event-us.career.greetinghr.com/" target="_blank">
<span v-if="language === 'ko'">채용</span>
<span v-else="">About Us</span>
</a>
<ui-popover class="!ml-0 relative flex" v-slot="{ open }">
<ui-popover-button @click="channelActive='channel'">
<div class="flex items-center font-bold text-gray-900">
<svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" stroke-width="1.5" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 017.843 4.582M12 3a8.997 8.997 0 00-7.843 4.582m15.686 0A11.953 11.953 0 0112 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0121 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0112 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 013 12c0-1.605.42-3.113 1.157-4.418" stroke-linecap="round" stroke-linejoin="round"></path>
</svg>
<span class="pr-1 notranslate">
                                        Language
                                    </span>
<svg class="fill-current h-4 w-4" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path>
</svg>
</div>
</ui-popover-button>
<ui-popover-panel class="flex absolute z-[100] flex-col w-32 right-0 rounded-md mt-2 py-2.5 bg-white text-gray-900 focus:outline-none shadow-lg origin-top-right top-[22px]" v-slot="{ close }">
<a @click="leng('ko')" class="py-2 px-4 hover:bg-gray-100 cursor-pointer notranslate">
                                    한국어
                                </a>
<a @click="leng('en')" class="py-2 px-4 hover:bg-gray-100 cursor-pointer notranslate">
                                    English
                                </a>
</ui-popover-panel>
</ui-popover>
</div>
<div class="text-gray-500">
<table>
<tr>
<td>
<span v-if="language === 'ko'">서비스 이용 문의</span>
<span v-else="">Contact Us</span>
</td>
<td class="pl-2 flex">
<a class="text-gray-900" href="https://event-us.channel.io/" target="_blank">
<span v-if="language === 'ko'">채팅상담</span>
<span v-else="">Chat</span>
</a>
<span class="pl-2">
<span v-if="language === 'ko'">(평일 10:00~17:00)</span>
<span v-else="">(Weekdays 10:00-17:00 KST)</span>
</span>
<span class="pl-2 text-gray-50 hidden lg:block">
                                    02-2088-8327
                                </span>
</td>
</tr>
<tr>
<td>
<span v-if="language === 'ko'">사업 제휴 문의</span>
<span v-else="">Partnership</span>
</td>
<td class="pl-2">
<a class="text-gray-900" href="mailto:partnership@event-us.kr">partnership@event-us.kr</a>
</td>
</tr>
</table>
</div>
<div class="flex">
<div>
<a @click="track('광고센터 클릭', {'위치': '푸터'})" class="inline py-2 px-6 text-xs bg-primary-50 rounded-md" href="/adcenter" target="_blank">
<span v-if="language === 'ko'">광고센터</span>
<span v-else="">Advertising Center</span>
</a>
</div>
<div class="pl-3">
<a @click="showBrochure()" class="inline py-2 px-6 text-xs bg-primary-50 rounded cursor-pointer">
<span v-if="language === 'ko'">서비스 소개자료</span>
<span v-else="">Service Brochure</span>
</a>
<ev-modal :open="brochure.isShow" @close="brochure.isShow = false" class="min-w-fit z-40">
<div ref="modalContent">
</div>
</ev-modal>
</div>
</div>
<div>
<ev-modal :open="errorModal.isShow" @close="errorModal.isShow = false" class="text-center">
<template #title="">
<div class="flex justify-center items-center mx-auto w-12 h-12 rounded-full bg-danger-50">
<svg aria-hidden="true" class="w-6 h-6 text-danger-500" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" fill-rule="evenodd"></path>
</svg>
</div>
<div class="mt-5">{{ errorModal.title }}</div>
</template>
<template #description="">
                            {{ errorModal.contents }}
                        </template>
<ev-button @click="errorModal.isShow = false" class="bg-white"> 닫기 </ev-button>
</ev-modal>
<ev-modal :open="successModal.isShow" @close="successModal.isShow = false" class="text-center">
<template #title="">
<div class="flex justify-center items-center mx-auto w-12 h-12 rounded-full bg-success-50">
<svg class="w-6 h-6 text-success-500" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
<path clip-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" fill-rule="evenodd"></path>
</svg>
</div>
<div class="mt-5">{{ successModal.title }}</div>
</template>
<template #description="">
                            {{ successModal.contents }}
                        </template>
<ev-button @click="successModal.isShow = false" class="bg-primary-500"> 확인 </ev-button>
</ev-modal>
</div>
<div class="notranslate pt-4 space-y-1">
<div>
<a class="text-base text-gray-500" href="/">
<span v-if="language === 'ko'">이벤터스</span>
<span v-else="">EVENTUS</span>
</a>
</div>
<div class="text-xs text-gray-500 space-y-1">
<div class="space-x-2">
<span v-if="language === 'ko'">(주)이벤터스</span>
<span v-else="">EVENTUS Co., Ltd.</span>
<span>|</span>
<span v-if="language === 'ko'">사업자등록번호 114-87-20403</span>
<span v-else="">Business Registration Number 114-87-20403</span>
</div>
<div>
<span v-if="language === 'ko'">통신판매업 신고번호 제2023-서울마포-1346호</span>
<span v-else="">Mail-order Business Registration No. 2023-Seoul Mapo-1346</span>
</div>
<div class="space-x-2">
<span v-if="language === 'ko'">대표 안영학</span>
<span v-else="">CEO Ahn Young Hak</span>
<span>|</span>
<span v-if="language === 'ko'">개인정보책임자 이정수</span>
<span v-else="">CPO Lee Jung Soo</span>
</div>
<div>
<span v-if="language === 'ko'">서울특별시 마포구 마포대로 122, 프론트원 16F</span>
<span v-else="">16F, FrontOne, 122 Mapo-daero, Mapo-gu, Seoul, Korea</span>
</div>
</div>
<div class="text-xs text-primary-400">
<span v-if="language === 'ko'">
            이벤터스는 통신판매중개자이며 행사에 대한 당사자 및 주최자가 아닙니다. 따라서 이벤터스는 등록된 행사에 대해 책임지지 않습니다.
        </span>
<span v-else="">
            EVENTUS is a mail order intermediary and is not a party to or organizer of the event. Therefore, EVENTUS is not responsible for registered events.
        </span>
</div>
</div>
<div class="grid grid-cols-2 gap-1 text-xs sm:flex sm:justify-between">
<a href="/legal/service">
<span v-if="language === 'ko'">서비스 이용 약관</span>
<span v-else="">Terms of Service</span>
</a>
<a class="font-bold" href="/legal/privacyprovision" target="_blank">
<span v-if="language === 'ko'">개인정보처리방침</span>
<span v-else="">Privacy Policy</span>
</a>
<a href="/legal/e_banking">
<span v-if="language === 'ko'">전자금융거래 이용약관</span>
<span v-else="">EFT Terms of Use</span>
</a>
<a href="/legal/refund">
<span v-if="language === 'ko'">취소 및 환불 약관</span>
<span v-else="">Cancellation and Refund Policy</span>
</a>
<a href="/legal/email">
<span v-if="language === 'ko'">이메일 주소 무단수집 거부</span>
<span v-else="">Refusal of Unauthorized Email Address Collection</span>
</a>
</div>
</div>
<div class="space-y-2 sm:flex sm:justify-between">
<div class="flex space-x-2 sm:order-2">
<a @click="outlinkClick($event)" href="http://blog.naver.com/withitblog" target="_blank">
<svg class="w-8" viewbox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
<path d="M0 0h32v32H0z" fill="transparent"></path>
<path d="M8.8 14.3a1 1 0 0 0-.6.3 1 1 0 0 0 0 1.4 1 1 0 0 0 .7.3 1 1 0 0 0 0-2zm8.5-.1a1 1 0 0 0-.7.3 1 1 0 0 0 0 1.4 1 1 0 0 0 .7.3 1 1 0 0 0 0-2zm5.5.1a1 1 0 0 0-.6.3 1 1 0 0 0 0 1.4 1 1 0 0 0 .6.3 1 1 0 0 0 0-2z" fill="currentColor"></path>
<path d="M25.4 6.9h-19a2.6 2.6 0 0 0-2.6 2.7v10.7a2.6 2.6 0 0 0 2.6 2.6h7.4s1.5 4 2 4 2-4 2-4h7.5a2.6 2.6 0 0 0 2.7-2.6V9.6a2.6 2.6 0 0 0-2.7-2.7zm-14.6 9.9a2.3 2.3 0 0 1-2.9.2v.3H6.5v-6.2h1.4v2.4a2.3 2.3 0 0 1 1.5-.5 1.9 1.9 0 0 1 1.4.7 2.5 2.5 0 0 1 .6 1.6 2 2 0 0 1-.6 1.5zm3 .5h-1.4v-3.8a1 1 0 0 0-.7-1V11a2.4 2.4 0 0 1 2.1 2.6zm5.7-1.1a2.3 2.3 0 0 1-.5.7 2.4 2.4 0 0 1-.8.5 2.6 2.6 0 0 1-1 .2 2.6 2.6 0 0 1-.9-.2 2.5 2.5 0 0 1-.8-.5 2.4 2.4 0 0 1-.5-.7 2.2 2.2 0 0 1 0-1.8 2.4 2.4 0 0 1 .5-.7 2.5 2.5 0 0 1 .8-.5 2.6 2.6 0 0 1 1-.2 2.6 2.6 0 0 1 1 .2 2.4 2.4 0 0 1 .7.5 2.2 2.2 0 0 1 .5.7 2.2 2.2 0 0 1 0 1.8zm5.7.6a2.8 2.8 0 0 1-.7 2.2 2.5 2.5 0 0 1-2 .5v-1.1a1.2 1.2 0 0 0 1.3-1.1V17a1.6 1.6 0 0 1-1.4.6 1.8 1.8 0 0 1-1.5-.6 2.4 2.4 0 0 1-.5-1.6 2.7 2.7 0 0 1 .6-1.8 2 2 0 0 1 1.5-.7 1.7 1.7 0 0 1 1.3.5V13h1.4z" fill="currentColor"></path>
</svg>
</a>
<a @click="outlinkClick($event)" href="https://www.facebook.com/eventus.korea" target="_blank">
<svg class="w-8" viewbox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
<g>
<path d="M0 0h32v32H0z" fill="transparent"></path>
<path d="M19.1 9.4H21V6.3a23 23 0 0 0-2.6-.2c-2.5 0-4.3 1.6-4.3 4.6v2.7h-2.8V17H14v8.7h3.5V17h2.7l.4-3.5h-3.1V11c0-1 .2-1.6 1.6-1.6z" fill="currentColor"></path>
</g>
</svg>
</a>
<a @click="outlinkClick($event)" href="https://pf.kakao.com/_xfxhGxcl" target="_blank">
<svg class="w-8" viewbox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
<g>
<g>
<path d="M0 0h32v32H0z" fill="transparent"></path>
<path d="m13.6 13.9-.7 1.8h1.4z" fill="currentColor"></path>
<path d="M16 6C9.7 6 4.7 10 4.7 15c0 3.1 2 5.9 5.3 7.5-1.2 4.2-1.3 4.2-1 4.3.2.2.5 0 5-3.1a14.5 14.5 0 0 0 2 .1c6.3 0 11.3-4 11.3-8.9s-5-8.8-11.3-8.8zm-5.6 11.4a.7.7 0 0 1-1.3 0v-3.8H8a.6.6 0 1 1 0-1.3h3.3a.6.6 0 1 1 0 1.3h-1zm5 .6c-.6 0-.5-.5-.8-1.1h-2c-.3.6-.2 1.1-.9 1.1-.6 0-.7-.4-.5-1l1.5-4a1 1 0 0 1 .9-.7 1 1 0 0 1 .9.6c1 3.2 2.5 5.1 1 5.1zm3.8 0H17c-1.1 0-.4-1.5-.6-5a.7.7 0 0 1 1.3 0v3.7h1.4a.6.6 0 1 1 0 1.2zm5.1-.6a.6.6 0 0 1-.2.5c-1 .7-1.6-1.3-2.5-2.2l-.2.3v1.4a.7.7 0 0 1-1.3 0v-4.5a.7.7 0 0 1 1.3 0v1.4c1.2-.9 1.8-2.5 2.6-1.7s-.8 1.4-1.4 2.2c1.5 2.1 1.8 2.2 1.7 2.6z" fill="currentColor"></path>
</g>
</g>
</svg>
</a>
<a @click="outlinkClick($event)" href="https://www.instagram.com/event.with.us/" target="_blank">
<svg class="w-8" viewbox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
<g>
<path d="M0 0h32v32H0z" fill="transparent"></path>
<g>
<path d="M19.9 6.4h-7.5a6.3 6.3 0 0 0-6.3 6.3v7.5a6.3 6.3 0 0 0 6.3 6.3h7.5a6.3 6.3 0 0 0 6.3-6.3v-7.5a6.3 6.3 0 0 0-6.3-6.3zm4.4 13.8a4.4 4.4 0 0 1-4.4 4.4h-7.5A4.4 4.4 0 0 1 8 20.2v-7.5a4.4 4.4 0 0 1 4.4-4.4h7.5a4.4 4.4 0 0 1 4.4 4.4z" fill="currentColor"></path>
</g>
<g>
<path d="M16.1 11.4a5 5 0 1 0 5 5 5 5 0 0 0-5-5zm0 8.2a3.1 3.1 0 1 1 3.2-3.2 3.1 3.1 0 0 1-3.2 3.2z" fill="currentColor"></path>
</g>
<g fill="currentColor" transform="translate(20.9 10.4)">
<circle cx=".7" cy=".7" r=".7"></circle>
</g>
</g>
</svg>
</a>
<a @click="outlinkClick($event)" href="https://www.youtube.com/channel/UCotb2ainbLyD59J88M0XXxw" target="_blank">
<svg class="w-8" viewbox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
<g>
<path d="M0 0h32v32H0z" fill="transparent"></path>
<path d="M29 9.5A3.4 3.4 0 0 0 26.6 7c-2.1-.6-10.7-.6-10.7-.6s-8.5 0-10.6.5a3.5 3.5 0 0 0-2.4 2.5 35.9 35.9 0 0 0-.5 6.5 35.8 35.8 0 0 0 .5 6.5A3.4 3.4 0 0 0 5.3 25c2.2.6 10.7.6 10.7.6s8.5 0 10.6-.5a3.4 3.4 0 0 0 2.4-2.4 35.9 35.9 0 0 0 .5-6.6 34 34 0 0 0-.5-6.5zM13.2 20v-8.2l7.1 4.1zm0 0" fill="currentColor"></path>
</g>
</svg>
</a>
</div>
<div class="text-xs text-gray-500 sm:order-1 sm:text-sm notranslate">
        Copyright ⓒ EVENTUS Co.,Ltd. All Rights Reserved.
    </div>
</div>
</div>
</div>
</footer>
<form action="/account/logoff" id="logoutform" method="post"><input name="__RequestVerificationToken" type="hidden" value="soaWCAyIuIvktZgJXGkG7K8MS3JPk_qRHJtbf-vJln6QnQyHIrL_STh5F5EDL_wtOCRHicNbsSezasp_8U3BnW8_Ugs1"/></form> <style>
        body {
            top: 0 !important;
        }

        #google_translate_element * {
            font-family: 'Spoqa Han Sans Neo', sans-serif;
            margin: 0;
            padding: 0;
        }

        .goog-te-gadget-simple {
            background: transparent;
            border: none;
            white-space: nowrap;
        }

        .goog-te-banner-frame {
            display: none;
        }

        .skiptranslate {
            display: none;
        }
    </style>
<script>
    const dropDownMenus = {
        solution: [
            {
                /* title: '행사 형태', */
                menus: [
                    { text: '오프라인', enText: 'Offline', link: '/hostcenter/solutiontype/offline' },
                    { text: '온라인', enText: 'Online', link: '/hostcenter/solutiontype/online' },
                    { text: '하이브리드', enText: 'Hybrid', link: '/hostcenter/solutiontype/hybrid' },

                ],
            },
            /*
            {
                title: '행사 유형',
                menus: [
                    { text: '데모데이', link: '/hostcenter/eventtype/demoday' },
                    { text: '컨퍼런스', link: '/hostcenter/eventtype/conference' },
                    { text: '기업 행사', link: '/hostcenter/eventtype/company' },
                    { text: '정부/기관 행사', link: '/hostcenter/eventtype/government' },
                    { text: '모임/커뮤니티', link: '/hostcenter/eventtype/community' },
                    { text: '웨비나', link: '/hostcenter/eventtype/webinar' },
                    { text: '세미나', link: '/hostcenter/eventtype/seminar' },
                ],
            },
            */
        ],
        product: [
            /*
            {
                title: '기능',
                menus: [
                    { text: '행사 전', link: '/hostcenter/feature/before' },
                    { text: '행사 중', link: '/hostcenter/feature/ongoing' },
                    { text: '행사 후', link: '/hostcenter/feature/after' },
                ],
            },
            */
            {
                /*title: '부가서비스',*/
                menus: [
                    { text: '명찰 출력', enText: 'Name Tag Printing', link: '/hostcenter/service/nametag' },
                    { text: 'VOD', enText: 'VOD', link: '/hostcenter/service/vod' },
                    { text: '광고', enText: 'Ads', link: '/adcenter' },
                ],
            },
        ],
        support: [
            { text: '블로그', enText: 'Blog', link: '/hostcenter/blog' },
            //{ text: '고객사례', enText: 'Customer Stories', link: '/hostcenter/main/customerstory' },
            //{ text: '호스트 뉴스레터', enText: 'Host Newsletter', link: '/hostcenter/hostnewsletter' },
            { text: '호스트 가이드 북', enText: 'Host Guidebook', link: 'https://eventwithus.notion.site/bfac6c5fd45348cda8454175770870d6', outlink: true },
            
            { text: '문의하기', enText: 'Contact Us', link: 'https://event-us.channel.io/', outlink: true },
        ],
    };
    for (const first in dropDownMenus) {
        let obj = undefined;
        for (const second in dropDownMenus[first]) {
            const item = dropDownMenus[first][second];
            if (item.menus) {
                obj = item.menus.find((x) => x.link === location.pathname) ?? obj;
            } else {
                obj = item.link === location.pathname ? item : obj;
            }
        }

        if (obj) {
            obj.isHere = true;
        }
    }
    /* global google wcs wcs_do */
    docReady(() => {
        window.headerApp = ui
            .createApp({
                data() {
                    const m_newCategories = [
                        {
                            title: '창업',
                            titleEn: 'Start-up',
                            url: '/search?category=창업&order=score&date=모든날&page=1',
                        },
                        {
                            title: '라이프',
                            titleEn: 'Life',
                            url: '/search?category=라이프&order=score&date=모든날&page=1',
                        },
                        {
                            title: '경영',
                            titleEn: 'Management',
                            url: '/search?category=경영&order=score&date=모든날&page=1',
                        },
                        {
                            title: '예술',
                            titleEn: 'Art',
                            url: '/search?category=예술&order=score&date=모든날&page=1',
                        },
                        {
                            title: '커리어',
                            titleEn: 'Career',
                            url: '/search?category=커리어&order=score&date=모든날&page=1',
                        },
                        {
                            title: '디자인/영상',
                            titleEn: 'Design/Video',
                            url: '/search?category=디자인/영상&order=score&date=모든날&page=1',
                        },
                        {
                            title: '행사 기획',
                            titleEn: 'Event Planning',
                            url: '/search?category=행사%20기획&order=score&date=모든날&page=1',
                        },
                        {
                            title: 'IT/프로그래밍',
                            titleEn: 'IT/Programming',
                            url: '/search?category=IT/프로그래밍&order=score&date=모든날&page=1',
                        },
                        {
                            title: '경제/금융',
                            titleEn: 'Economics/Finance',
                            url: '/search?category=경제/금융&order=score&date=모든날&page=1',
                        },
                        {
                            title: '인문/사회',
                            titleEn: 'Humanities/Social Sciences',
                            url: '/search?category=인문/사회&order=score&date=모든날&page=1',
                        },
                        {
                            title: '마케팅',
                            titleEn: 'Marketing',
                            url: '/search?category=마케팅&order=score&date=모든날&page=1',
                        },
                        {
                            title: '과학기술',
                            titleEn: 'Science and Technology',
                            url: '/search?category=과학기술&order=score&date=모든날&page=1',
                        },
                        {
                            title: '의료/의학',
                            titleEn: 'Medical/Healthcare',
                            url: '/search?category=의료/의학&order=score&date=모든날&page=1',
                        },
                        {
                            title: '관광/여행',
                            titleEn: 'Tourism/Travel',
                            url: '/search?category=관광/여행&order=score&date=모든날&page=1',
                        },
                        {
                            title: '기타',
                            titleEn: 'Others',
                            url: '/search?category=기타&order=score&date=모든날&page=1',
                        },
                    ];
                    const newCategories = [
                        {
                            title: '창업',
                            titleEn: 'Start-up',
                            url: '/search?category=창업&order=score&date=모든날&page=1',
                        },
                        {
                            title: 'IT/프로그래밍',
                            titleEn: 'IT/Programming',
                            url: '/search?category=IT/프로그래밍&order=score&date=모든날&page=1',
                        },
                        {
                            title: '라이프',
                            titleEn: 'Life',
                            url: '/search?category=라이프&order=score&date=모든날&page=1',
                        },
                        {
                            title: '경제/금융',
                            titleEn: 'Economics/Finance',
                            url: '/search?category=경제/금융&order=score&date=모든날&page=1',
                        },

                        {
                            title: '경영',
                            titleEn: 'Management',
                            url: '/search?category=경영&order=score&date=모든날&page=1',
                        },
                        {
                            title: '인문/사회',
                            titleEn: 'Humanities/Social Sciences',
                            url: '/search?category=인문/사회&order=score&date=모든날&page=1',
                        },
                        {
                            title: '예술',
                            titleEn: 'Art',
                            url: '/search?category=예술&order=score&date=모든날&page=1',
                        },
                        {
                            title: '마케팅',
                            titleEn: 'Marketing',
                            url: '/search?category=마케팅&order=score&date=모든날&page=1',
                        },
                        {
                            title: '커리어',
                            titleEn: 'Career',
                            url: '/search?category=커리어&order=score&date=모든날&page=1',
                        },
                        {
                            title: '과학기술',
                            titleEn: 'Science and Technology',
                            url: '/search?category=과학기술&order=score&date=모든날&page=1',
                        },
                        {
                            title: '디자인/영상',
                            titleEn: 'Design/Video',
                            url: '/search?category=디자인/영상&order=score&date=모든날&page=1',
                        },
                        {
                            title: '의료/의학',
                            titleEn: 'Medical/Healthcare',
                            url: '/search?category=의료/의학&order=score&date=모든날&page=1',
                        },
                        {
                            title: '행사 기획',
                            titleEn: 'Event Planning',
                            url: '/search?category=행사%20기획&order=score&date=모든날&page=1',
                        },
                        {
                            title: '관광/여행',
                            titleEn: 'Tourism/Travel',
                            url: '/search?category=관광/여행&order=score&date=모든날&page=1',
                        },
                        {
                            title: '기타',
                            titleEn: 'Others',
                            url: '/search?category=기타&order=score&date=모든날&page=1',
                        },
                    ];

                    const categories = [
                        {
                            title: '행사 캘린더',
                            titleEn: 'Calendar',
                            url: '/search/calendar',
                        },
                        {
                            title: '행사 지도',
                            titleEn: 'Map',
                            url: '/search/map',
                        },
                        {
                            title: '이번주 행사',
                            titleEn: 'This Week',
                            url: '/search?order=score&date=이번주&page=1',
                        },
                        {
                            title: '무료 행사',
                            titleEn: 'Free',
                            url: '/search?costmin=무료&order=score&date=모든날&page=1',
                        },
                        {
                            title: '오프라인',
                            titleEn: 'Offline',
                            url: '/search?eventsystemtype=오프라인&order=score&date=모든날&page=1',
                        },
                        {
                            title: '온라인',
                            titleEn: 'Online',
                            url: '/search?eventsystemtype=온라인&order=score&date=모든날&page=1',
                        },
                        {
                            title: '지역축제',
                            titleEn: 'Local Festival',
                            url: '/search/festival',
                        },
                    ];
                    const filter = [
                        { value: 'order', name: '행사임박순' },
                        { value: 'date', name: '생성순' },
                        { value: 'title', name: '이름순' },
                    ];

                    return {
                        newCategories,
                        m_newCategories,
                        categories,
                        openCategory: false,
                        user: asp.user,
                        recentEvent: [],
                        myChannel: [],
                        channelEvent: {
                            Filter: filter,
                            SortType: filter[0],
                        },
                        openAside: false,
                        openSearch: false,
                        recommandSearchEvents: [],
                        userFavoriteEvents:[],
                        searchHistories: [],
                        loginPopUp: {
                            isOpen:false,
                            data:[],
                        },
                        suggest: [],
                        useSearchHistory: true,
                        showAllSearchTrends: false,
                        analytics: [],
                        query: '',
                        isUserEmailConfirmed: true,
                        isEmailConfirmationModalShow: false,
                        hostceterNav: 'False',
                        isCategoryExposed: 'True',
                        SmsAndInvoice: false,
                        ShowDown: false,
                        DropDown: '',
                        asideMenu: '',
                        dropDownMenus: dropDownMenus,
                        dropDownHeight: '284.3px',
                        myMenu: false,
                        myChannelBtn: false,
                        submenu: false,
                        openForm: false,
                        channelActive: 'channel',
                        channelFilter: 'order',
                        searchInput: '',
                        showPriceModal: false,
                        language: 'ko',
                        demo: {
                            Title: '무료로 솔루션을 체험해 보세요.',
                            BtnText: '지금 바로 솔루션 체험 신청하기',
                            CompleteModal: '',
                            Route: '',
                            PlaceHolder: '',
                            Purpose: '',
                            Type: '',
                        },
                        complete: {
                            success: false,
                            seeAnother: false,
                        },
                        contactModel: {
                            name: '',
                            email: '',
                            phone: '',
                            affiliation: '',
                            department: '',
                            route: '',
                            eventPeople: '',
                            contents: '',
                            privacy: false,
                            marketing: false,
                            over14: false,
                        },
                        routeItem: [
                            '이벤터스 행사 참여',
                            '인터넷 검색',
                            '지인 추천',
                            '참가 행사에서 경험',
                            '네이버 블로그',
                            '언론/보도자료',
                            '페이스북',
                            '인스타그램',
                            '기타',
                        ],
                        peopleItem: [
                            '100명 이하',
                            '100명~200명',
                            '200명~300명',
                            '300명~500명',
                            '500명~1000명',
                            '1000명 이상',
                        ],
                        subNavCards: [
                            {
                                href: '/adcenter',
                                target: '_self',
                                title: '광고센터 바로가기',
                                titleImageUrl: '/Content/neweventus/image/megaphone_3d@3x.png',
                                description: '광고를 통해 행사를 알리고, 더 많은 참가자를 만나보세요.',
                            },
                            {
                                href: '/hostcenter/community',
                                target: '_self',
                                title: '커뮤니티 바로가기',
                                titleImageUrl: '/Content/neweventus/image/writing_hand_3d_light@3x.png',
                                description: '자유로운 행사 인사이트를 공유하세요.',
                            },
                        ],
                    };
                },
                computed: {
                    orderedSearchHistories() {
                        return this.searchHistories.sort(() => -1).slice(0, 6);
                    },
                    isAdcenterLandingPage() {
                        return location.pathname === '/adcenter';
                    },
                },
                watch: {
                    openCategory: function (val) {
                        if (val) {
                            document.body.style.overflowY = 'hidden';
                        } else {
                            document.body.style.overflowY = 'auto';
                        }
                    },
                    openAside: function (val) {
                        if (val) {
                            if(!this.asideMenu){
                                this.asideMenu = 'solution';
                            }
                            document.getElementById("ch-plugin-entry").style.display="none"
                        }else{
                            this.myMenu = false;
                            this.myChannelBtn = false;
                            document.getElementById("ch-plugin-entry").style.display="block"
                        }
                    },
                    openSearch: function (val) {
                        const self = this;
                        if (val) {
                            self.recommandSearchEvents.map((item) => {
                                self.appendPageView(item.pitId, "searcharea");
                            });
                        }
                    },
                    channelFilter: function () {
                        this.searchChannel(this.channelFilter);
                    },
                },
                created() {
                    const self = this;
                    window.setLayoutSearchInput = function (value) {
                        self.query = value;
                    };

                    fetch(`/hostcenter/GetMyChannelJson`).then((response) =>
                        response
                            .json()
                            .then((data) => ({
                                data: data,
                                status: response.status,
                            }))
                            .then((res) => {
                                self.myChannel = JSON.parse(res.data);
                            }),
                    );
                    fetch(`/hostcenter/GetRecentEvent`).then((response) =>
                        response
                            .json()
                            .then((data) => ({
                                data: data.recentEvent,
                            }))
                            .then((res) => {
                                self.recentEvent = res.data;
                            }),
                    );
                    document.addEventListener('languageChanged', (e) => {
                        this.language = e.detail.language;
                    });
                },
                methods: {
                    leng(language) {
                        window.setLanguage(language);
                    },
                    pathLike(str) {
                        return location.pathname.includes(str);
                    },
                    isShowTrue() {
                        this.isShow = true;
                        this.track('소개서 다운로드', { 위치: '푸터' });
                        mixpanel.track('start_lead', {
                            currency: 'KRW',
                            value: 0,
                            inflow_category: location.pathname,
                            click_text: '소개서 다운로드',
                        });
                    },
                    calenderOrMapClick(val){
                        if(val==='행사 캘린더'||val==='행사 지도'){
                            var title="event_map_view";
                            if(val==='행사 캘린더'){
                                title="event_calendar_view";
                            }
                            mixpanel.track(title);
                        }
                    },
                    track(val, obj) {
                        mixpanel.track(val, {
                            경로: location.pathname,
                            ...obj,
                        });
                    },
                    getUserLastName() {
                        let name = '';
                        if (this.user.isAuthenticated) {
                            name =
                                this.user.name.length < 3
                                    ? this.user.name
                                    : this.user.name.length > 3
                                    ? this.user.name.substring(0, 2)
                                    : this.user.name.substring(1, 3);
                        }

                        return name;
                    },
                    async toggleEmailConfirmationModal(state) {
                        if (state === 'open') {
                            const sendResult = await this.sendEmailConfirmation();
                            if (sendResult) {
                                this.isEmailConfirmationModalShow = true;
                            }
                        } else {
                            this.isEmailConfirmationModalShow = false;
                        }
                    },
                    async sendEmailConfirmation() {
                        const response = await axios.get('/account/SendEmailConfirmationAndCloseAsync', {
                            params: {
                                isFirstConfirmation: false,
                                returnURL: '/',
                            },
                        });
                        if (response.status !== 204) {
                            ui.alert('인증 이메일 발송에 실패했습니다. 다시 시도해주세요.');
                            return false;
                        }
                        return true;
                    },
                    logout() {
                        document.getElementById('logoutform').submit();
                    },
                    getSuggest: function () {
                        const self = this;
                        const query = document.getElementById('query').value;
                        if (!query) {
                            self.suggest = [];

                            return;
                        }
                        axios.get('https://api.event-us.kr/api/v1/engine/suggest?query=' + query).then(({ data }) => {
                            self.suggest = data.results;
                        });
                    },
                    beforeSearch(query) {
                        const self = this;
                        const user = this.user;
                        if (query) {
                            if (self.useSearchHistory) {
                                if (user.isAuthenticated) {
                                    axios.post('/home/addsearchhistroy', {
                                        Query: query,
                                    });
                                } else {
                                    const date = new Date();
                                    const queryHistoryIndex = self.searchHistories.findIndex((x) => x.Query === query);
                                    if (queryHistoryIndex !== -1) {
                                        self.searchHistories.splice(queryHistoryIndex, 1);
                                    }
                                    self.searchHistories.push({
                                        HistoryId: date.getTime() + "",
                                        Query: query,
                                        Date: moment().format(),
                                    });
                                    localStorage.setItem('search_history', JSON.stringify(self.searchHistories));
                                }
                            }
                        }
                    },
                    serachSubmit() {
                        const self = this;
                        mixpanel.track('search_results_view', { search_term: self.$refs.queryInput.value });

                        self.beforeSearch(self.$refs.queryInput.value);
                        self.$refs.layoutSearchForm.submit();
                    },
                    getSearchUrl(query) {
                        const queryModel = {
                            query,
                            order: 'score',
                            date: '모든날',
                            page: 1,
                        };

                        return `/search?${queryString.stringify(queryModel, { sort: false })}`;
                    },
                    searchHistoryRemove(historyId) {
                        const self = this;
                        const user = this.user;
                        if (self.searchHistories.length) {
                            if (historyId) {
                                self.searchHistories = self.searchHistories.filter((x) => x.HistoryId !== historyId);
                            } else {
                                self.searchHistories = [];
                            }

                            if (user.isAuthenticated) {
                                axios.post('/home/removesearchhistory', {
                                    QueryId: historyId,
                                    type: historyId ? 'item' : 'All',
                                });
                            } else {
                                localStorage.setItem('search_history', JSON.stringify(self.searchHistories));
                            }
                        }
                    },
                    toggleUseSearchHistory() {
                        const self = this;
                        if (self.useSearchHistory) {
                            localStorage.setItem('setSearchHistory', 'off');
                            self.useSearchHistory = false;
                        } else {
                            localStorage.setItem('setSearchHistory', 'on');
                            self.useSearchHistory = true;
                        }
                    },
                    focusQuery() {
                        const self = this;
                        const queryInputElement = self.$refs.queryInput;
                        if (self.openSearch && queryInputElement) {
                            queryInputElement.value = queryString.parse(location.search.toLowerCase()).query ?? '';
                            queryInputElement.focus();
                        }
                    },
                    onBannerClick(page, id) {
                        if (location.host === 'event-us.kr') {
                            axios.post('/userhelpers/targetclick', { targetid: id });
                        }
                    },
                    appendPageView(id, position) {
                        if (location.host === 'event-us.kr') {
                            axios.post('/userhelpers/targetrolling', { targetId: id, position: position });
                        }
                    },
                    blobImageUrl(url) {
                        return url.charAt(0) === '/' ? asp.blobUrl + url : url;
                    },
                    myChannelClick() {
                        const self = this;
                        if (self.user.isAuthenticated) {
                            self.myChannelBtn = !self.myChannelBtn;
                            self.channelActive = 'channel';
                        } else {
                            location.href = '/account/login?ReturnUrl=' + self.user.rawUrl;
                        }
                    },
                    isMainChannel(item) {
                        const setData = { subdomain: item.SubDomain };
                        this.getPromiseData('/Mypage/MainPlatformSet', setData, 'channel');
                    },
                    channelCreateClick() {
                        mixpanel.track('channel_start', { click_text: '새 채널 만들기' });
                        location.href = '/hostcenter/channelcreate';
                    },
                    searchChannel() {
                        const setData = { eventId: '', channelName: this.searchInput, type: '', order: this.channelFilter };
                        this.getPromiseData('/hostcenter/SearchChannel', setData, 'search');
                    },
                    onEnterSearchInput() {
                        const setData = { channelName: this.searchInput, order: this.channelFilter };
                        this.getPromiseData('/hostcenter/NewSearchChannel', setData, 'search');
                    },
                    PromiseData(getData, type) {
                        const self = this;
                        switch (type) {
                            case 'channel':
                                self.myChannel.filter((e) => {
                                    if (e.mainChannel === true) {
                                        e.mainChannel = false;
                                    }
                                });
                                self.myChannel.filter((e) => {
                                    if (e.SubDomain === getData.data.subdomain) {
                                        e.mainChannel = true;
                                    }
                                });
                                break;
                            case 'search':
                                self.myChannel = getData.data.channelList;
                                break;
                        }
                    },
                    getPromiseData(url, setData, type) {
                        const self = this;
                        function getData() {
                            return new Promise(function (resolve) {
                                axios.post(url, setData).then(function (response) {
                                    resolve(response);
                                });
                            });
                        }
                        getData().then(function (Data) {
                            self.PromiseData(Data, type);
                        });
                    },
                    addRecentEvent(item) {
                        const today = new Date();

                        const data = {
                            ProjectId: item.ProjectId,
                            ClickedDate: today,
                            CoverImageUrl: item.CoverImageUrl,
                            Title: item.Title,
                            SubDomain: item.SubDomain,
                        };
                        axios.post('/HostCenter/AddRecentEvent', data);
                    },
                    openContactForm(type, route, solutionType) {
                        this.myMenu = this.myChannelBtn = this.openAside = false;
                        let title = '',
                            btnText = '',
                            completeModal = '',
                            purpose = '체험 목적',
                            placeHolder =
                                '솔루션 체험 목적 혹은 이벤터스 데모에 궁금한 점을 남겨주시면 전문가가 더 빠르게 도움을 드릴 수 있어요.';
                        if (type === 'demo') {
                            title = '무료로 솔루션을 체험해보세요.';
                            btnText = '지금 바로 솔루션 체험하기';
                            completeModal = 'success';
                        }
                        if (type === 'booking') {
                            title = '지금 바로 상담 받아보세요';
                            btnText = '전문가와 상담하기';
                            placeHolder = '서비스에 궁금한 점을 남겨주시면, 전문가가 더 빠르게 도움을 드릴 수 있어요.';
                            purpose = '상담 목적';
                            completeModal = 'seeAnother';
                        }
                        if (type === 'estimate') {
                            title = '지금 바로 행사 견적을 받아보세요.';
                            btnText = '지금 바로 견적받기';
                            placeHolder =
                                '행사 운영, 진행에 궁금한 점을 남겨주시면 견적과 함께 행사에 필요한 기능을 안내드릴 수 있어요.';
                            completeModal = 'seeAnother';
                        }
                        let btnTxt = '';
                        if (route === '네비-데모신청') {
                            this.track('데모신청 클릭', { 위치: '상단 네비게이션바' });
                            btnTxt = '데모신청 클릭';
                        }
                        if (route === '메인-데모신청') {
                            this.track('데모 신청하기 클릭');
                            btnTxt = '데모 신청하기 클릭';
                        }
                        if (route === '메인-전문가 상담') {
                            this.track('전문가와 상담하기 클릭');
                            btnTxt = '전문가와 상담하기 클릭';
                        }

                        this.demo.Title = title;
                        this.demo.BtnText = btnText;
                        this.demo.CompleteModal = completeModal;
                        this.demo.Route = route;
                        this.demo.Type = solutionType;
                        this.demo.PlaceHolder = placeHolder;
                        this.demo.Purpose = purpose;
                        this.openForm = true;
                        this.track('start_lead', {
                            currency: 'KRW',
                            value: 0,
                            inflow_category: location.pathname,
                            click_text: btnTxt,
                        });
                    },
                    onSubmit: (function () {
                        let isSaving = false;

                        return function () {
                            if (!isSaving) {
                                isSaving = true;
                                document.getElementById('contactActionBtn').disabled = true;
                                const self = this;
                                self.contactModel.contents = document.getElementById('contactContents').value;

                                const _contactModel = self.contactModel;
                                if (!_contactModel.over14) {
                                    alert('만 14세 미만은 신청하실 수 없습니다.');
                                    isSaving = false;
                                    document.getElementById('contactActionBtn').disabled = false;

                                    return false;
                                }
                                if (_contactModel.privacy) {
                                    let flag = true;
                                    if (!_contactModel.name) {
                                        alert('이름을 입력해주세요');
                                        document.getElementById('contactActionBtn').disabled = false;
                                        isSaving = false;
                                        flag = false;

                                        return false;
                                    }
                                    if (!_contactModel.email) {
                                        alert('이메일을 입력해주세요');
                                        isSaving = false;
                                        flag = false;

                                        return false;
                                    } else {
                                        const re =
                                            /([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
                                        if (!re.test(_contactModel.email)) {
                                            alert('이메일 주소가 유효하지 않습니다.');
                                            document.getElementById('contactActionBtn').disabled = false;
                                            isSaving = false;
                                            flag = false;

                                            return false;
                                        }
                                    }
                                    if (!_contactModel.phone) {
                                        alert('연락처를 입력해주세요');
                                        isSaving = false;
                                        flag = false;

                                        return false;
                                    } else {
                                        const rex = /^[0-9]{2,3}[0-9]{3,4}[0-9]{4}/;
                                        if (!rex.test(_contactModel.phone.replace(/-/gi, ''))) {
                                            alert('연락처가 올바르지 않습니다');
                                            document.getElementById('contactActionBtn').disabled = false;
                                            isSaving = false;
                                            flag = false;

                                            return false;
                                        }
                                    }
                                    if (!_contactModel.affiliation) {
                                        alert('회사 또는 단체명을 입력해주세요');
                                        document.getElementById('contactActionBtn').disabled = false;
                                        isSaving = false;
                                        flag = false;

                                        return false;
                                    }
                                    if (!_contactModel.route) {
                                        alert('이벤터스를 알게 된 경로를 선택해주세요');
                                        document.getElementById('contactActionBtn').disabled = false;
                                        isSaving = false;
                                        flag = false;

                                        return false;
                                    }
                                    if (!_contactModel.eventPeople) {
                                        alert('예상 참가 인원을 선택해주세요');
                                        document.getElementById('contactActionBtn').disabled = false;
                                        isSaving = false;
                                        flag = false;

                                        return false;
                                    }
                                    if (flag) {
                                        const sheetModel = {
                                            solutionType: self.demo.Type,
                                            name: _contactModel.name,
                                            phone: _contactModel.phone,
                                            email: _contactModel.email,
                                            affiliation: _contactModel.affiliation,
                                            detpartment: _contactModel.department,
                                            route: _contactModel.route,
                                            eventPeople: _contactModel.eventPeople,
                                            contents: _contactModel.contents,
                                            marketing: _contactModel.marketing,
                                            consultingPage: self.demo.Route,
                                            formType: '데모',
                                        };
                                        axios({
                                            method: 'POST',
                                            url: '/HostCenter/SolutionConsulting',
                                            data: {
                                                scm: sheetModel,
                                            },
                                        }).then(function () {
                                            document.getElementById('contactActionBtn').disabled = false;
                                            isSaving = false;
                                            mixpanel.track('generate_lead', {
                                                currency: 'KRW',
                                                value: 0,
                                                inflow_category: location.pathname,
                                                visit_route: _contactModel.route,
                                            });
                                            gtag('event', 'generate_lead', {
                                                currency: 'KRW',
                                                value: 0,
                                                items: [
                                                    {
                                                        inflow_category: location.pathname,
                                                        visit_route: _contactModel.route,
                                                        action_position: self.demo.Route,
                                                    },
                                                ],
                                            });

                                            self.openForm = false;
                                            self.complete[self.demo.CompleteModal] ||= true;
                                            Object.keys(self.contactModel).forEach((key) => {
                                                self.contactModel[key] =
                                                    typeof self.contactModel[key] === 'string' ? '' : false;
                                            });
                                            document.getElementById('contactContents').value = '';
                                            //const _nasa = {};
                                            //if (window.wcs) _nasa['cnv'] = wcs.cnv('4', '1');
                                            //wcs_do(_nasa);
                                        });
                                    }
                                } else {
                                    alert('개인정보처리방침에 동의해주세요.');
                                    isSaving = false;
                                    document.getElementById('contactActionBtn').disabled = false;

                                    return false;
                                }

                                return false;
                            }
                        };
                    })(),
                },
                beforeMount() {
                    const self = this;
                    const user = this.user;
                    const params = queryString.parse(location.search.toLowerCase());
                    self.query = params.query;

                    const setSearchHistory = localStorage.getItem('setSearchHistory');
                    if (setSearchHistory) {
                        self.useSearchHistory = setSearchHistory === 'on' ? true : false;
                    } else {
                        localStorage.setItem('setSearchHistory', 'on');
                    }

                    let resultStringToBoolean = null;
                    axios.get('/account/GetEmailConfirmationState').then((res) => {
                        if (res.data === 'confirmed') {
                            resultStringToBoolean = true;
                        } else if (res.data === 'not loggined') {
                            resultStringToBoolean = true;
                        } else {
                            resultStringToBoolean = false;
                        }

                        this.isUserEmailConfirmed = resultStringToBoolean;
                    });
                    axios.post('/home/getmainrecommandevent').then((response) => {
                        self.recommandSearchEvents = util.shuffleArray(response.data.sr);
                    });
                    axios.post('/home/getuserfavoriteevents').then(function (result) {
                        self.userFavoriteEvents = result.data;
                    });
                    if (self.useSearchHistory) {
                        if (user.isAuthenticated) {
                            axios.post('/home/getsearchhistory').then((response) => {
                                self.searchHistories = response.data;
                            });
                        } else {
                            const localSearchHistories = localStorage.getItem('search_history');
                            if (localSearchHistories) {
                                self.searchHistories = JSON.parse(localSearchHistories);
                            }
                        }
                    }

                    axios.get('https://api.event-us.kr/api/v1/engine/analytics').then((response) => {
                        self.analytics = response.data.results
                            .filter((x) => x.term !== '')
                            .sort((b, a) => a.clicks - b.clicks ?? a.queries / a.clicks - b.queries / b.clicks);
                    });
                },
            })
            .mount('#header');
        window.footerApp = ui.createApp({
            data() {
                return {
                    successModal: {
                        isShow: false,
                        title: '',
                        contents: '',
                    },
                    errorModal: {
                        isShow: false,
                        title: '',
                        contents: '',
                    },
                    brochure: {
                        isShow: false,
                        checkAll: false,
                        privacy: false,
                        marketingUnchecked: false,
                    },
                    menus: dropDownMenus,
                    hostceterNav: !!'',
                    serviceModel: {
                        name: '',
                        email: '',
                        phone: '',
                        affiliation: '',
                        team: '',
                        department: '',
                        level: '',
                        isEvent: '',
                        marketing: false,
                        submitbtn: true,
                    },
                    language: 'ko',
                };
            },
            created() {
                document.addEventListener('languageChanged', (e) => {
                    this.language = e.detail.language;
                });
            },
            mounted() {
                this.$nextTick(() => {
                    this.checkIsPwaInstalled().then((isPwaInstalled) => {
                        if (isPwaInstalled) {
                            document.getElementById('pwa-prompt-button').style.display = 'none';
                        }
                    });
                });
            },
            methods: {
                leng(language) {
                    window.setLanguage(language);
                },
                showBrochure() {
                    this.brochure.isShow = true;
                    this.$nextTick(() => {
                    // 스크립트 로드 및 실행
                    const script1 = document.createElement('script');
                    script1.setAttribute('charset', 'utf-8');
                    script1.setAttribute('type', 'text/javascript');
                    script1.setAttribute('src', '//js.hsforms.net/forms/embed/v2.js');

                    // script1을 먼저 추가
                    this.$refs.modalContent.appendChild(script1);

                    script1.onload = () => {
                        const script2 = document.createElement('script');
                        script2.innerHTML = `
                        hbspt.forms.create({
                            region: "na1",
                            portalId: "22319584",
                            formId: "74137034-bc21-4328-b8e1-b8ac25e9f411"
                        });
                        `;
                        this.$refs.modalContent.appendChild(script2);
                    };
                    });                   
                    this.track('소개서 다운로드', { 위치: '푸터' });
                    mixpanel.track('start_lead', {
                        currency: 'KRW',
                        value: 0,
                        inflow_category: location.pathname,
                        click_text: '소개서 다운로드',
                    });
                },
                track(val, obj) {
                    mixpanel.track(val, {
                        경로: location.pathname,
                        ...obj,
                    });
                },
                outlinkClick(event) {
                    const url = event.currentTarget.href;
                    if (!util.checkSessionStorage('OutsideFromMain', url)) {
                        axios.post('/useraction/outsideurl', {
                            url: url,
                            stamp: (new Date().getTime() * 10000 + 621356292000000000).toString(),
                        });
                    }
                },
                commitAnswer() {
                    const self = this;

                    self.serviceModel.submitbtn = false;

                    if (!self.serviceModel.marketing) {
                        self.serviceModel.submitbtn = true;
                        self.brochure.marketingUnchecked = true;

                        return false;
                    }

                    const re =
                        /([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
                    if (!re.test(self.serviceModel.email)) {
                        self.serviceModel.submitbtn = true;
                        self.errorModal.title = '이메일 주소가 유효하지 않습니다.';
                        self.errorModal.contents = '';
                        self.errorModal.isShow = true;

                        return false;
                    }
                    const rex = /^[0-9]{2,3}[0-9]{3,4}[0-9]{4}/;
                    if (!rex.test(self.serviceModel.phone.replace(/-/gi, ''))) {
                        self.serviceModel.submitbtn = true;
                        self.errorModal.title = '연락처가 올바르지 않습니다.';
                        self.errorModal.contents = '';
                        self.errorModal.isShow = true;

                        return false;
                    } else {
                        self.serviceModel.phone = self.serviceModel.phone.replace(
                            /^(\d{2,3})(\d{3,4})(\d{4})$/,
                            '$1-$2-$3',
                        );
                    }

                    self.serviceModel.affiliation =
                        self.serviceModel.team +
                        (self.serviceModel.department === '' ? '' : '/' + self.serviceModel.department) +
                        (self.serviceModel.level === '' ? '' : '/' + self.serviceModel.level);

                    axios.post('/home/proposaldownload', self.serviceModel).then((response) => {
                        if (response.data.success) {
                            mixpanel.track('generate_lead', {
                                currency: 'KRW',
                                value: 0,
                                inflow_category: '소개서 다운로드',
                                visit_route: '소개서 다운로드',
                            });
                            gtag('event', 'generate_lead', {
                                currency: 'KRW',
                                value: 0,
                                items: [
                                    {
                                        inflow_category: '소개서 다운로드',
                                        visit_route: '소개서 다운로드',
                                        index: 'generate_lead',
                                    },
                                ],
                            });
                            mixpanel.track('file_download', {
                                page_path: location.href,
                                click_text: '소개서 다운로드',
                                file_extension: 'pdf',
                                file_name: '이벤터스_회사소개서,이벤터스_서비스_제안서',
                                click_url: '',
                            });

                            gtag('event', 'file_download', {
                                page_path: location.href,
                                click_text: '소개서 다운로드',
                                file_extension: 'pdf',
                                file_name: '이벤터스_회사소개서,이벤터스_서비스_제안서',
                                click_url: '',
                                items: [
                                    {
                                        index: 'file_download',
                                    },
                                ],
                            });

                            self.successModal.title = '신청이 완료되었습니다';
                            self.successModal.contents = '입력하신 메일로 서비스 소개자료가 발송되었습니다.';
                            self.successModal.isShow = true;
                            self.brochure.isShow = false;
                            self.modelReset();
                        }
                    });
                },
                fileDownLoad(url) {
                    const link = document.createElement('a');
                    document.body.appendChild(link);
                    link.setAttribute('download', null);
                    link.style.display = 'none';
                    link.setAttribute('href', url);
                    link.click();
                    document.body.removeChild(link);
                },
                modelReset() {
                    const self = this;
                    self.serviceModel.name = '';
                    self.serviceModel.email = '';
                    self.serviceModel.phone = '';
                    self.serviceModel.affiliation = '';
                    self.serviceModel.team = '';
                    self.serviceModel.department = '';
                    self.serviceModel.level = '';
                    self.serviceModel.isEvent = '';
                    self.serviceModel.marketing = false;
                    self.serviceModel.isEvent = '';
                    self.brochure.privacy = false;
                    self.brochure.checkAll = false;
                    self.brochure.marketingUnchecked = false;
                    self.serviceModel.submitbtn = true;
                },
                async checkIsPwaInstalled() {
                    const apps = await navigator.getInstalledRelatedApps();

                    return apps.length !== 0 || window.innerHeight / window.screen.height > 0.9;
                },
                handleBrochureCheckAll() {
                    const self = this;

                    self.brochure.checkAll = !self.brochure.checkAll;
                    if (self.brochure.checkAll) {
                        self.brochure.privacy = true;
                        self.serviceModel.marketing = true;
                    } else {
                        self.brochure.privacy = false;
                        self.serviceModel.marketing = false;
                    }
                },
            },
            watch: {
                'brochure.privacy'(checked) {
                    const self = this;
                    if (checked && self.serviceModel.marketing) {
                        self.brochure.checkAll = true;
                    } else {
                        self.brochure.checkAll = false;
                    }
                },
                'serviceModel.marketing'(checked) {
                    const self = this;
                    if (checked && self.brochure.privacy) {
                        self.brochure.checkAll = true;
                    } else {
                        self.brochure.checkAll = false;
                    }
                },
            },
        }).mount('#footer');
        ui.createApp({
            data() {
                return {
                    pwa: {
                        prompt: null,
                        isOpened: false,
                        isMobile: 'False',
                        isDownloading: false,
                    },
                };
            },
            mounted() {
                this.$nextTick(() => {
                    this.checkIsPwaInstalled().then((isPwaInstalled) => {
                        const pwaButton = document.getElementById('pwa-prompt-button');
                        if (!isPwaInstalled) {
                            this.initPwaPrompt();
                            this.addAppInstalledEvent();

                            if (pwaButton) {
                                pwaButton.addEventListener('click', () => {
                                    this.onClickPwaButton('Footer');
                                });
                            }
                        }

                        if ('getInstalledRelatedApps' in navigator && this.pwa.isMobile === 'True') {
                            this.checkPwaPopupState(isPwaInstalled);
                        }
                    });
                });
            },
            methods: {
                async checkIsPwaInstalled() {
                    const apps = await navigator.getInstalledRelatedApps();

                    return apps.length !== 0 || window.innerHeight / window.screen.height > 0.9;
                },
                initPwaPrompt() {
                    window.addEventListener('beforeinstallprompt', (event) => {
                        event.preventDefault();
                        this.pwa.prompt = event;
                    });
                },
                addAppInstalledEvent() {
                    window.addEventListener('appinstalled', async () => {
                        this.pwa.isDownloading = false;
                        this.pwa.isOpened = false;
                        this.setPwaCookie(365);
                    });
                },
                checkPwaPopupState(isPwaInstalled) {
                    if (util.getCookie('PwaModalClose')) {
                        this.pwa.isOpened = false;
                    } else if (!isPwaInstalled) {
                        this.pwa.isOpened = true;
                    }
                },
                async onClickPwaButton(way) {
                    window.InstallWay = way;
                    this.pwa.prompt.prompt();
                    const choice = await this.pwa.prompt.userChoice;
                    if (choice.outcome === 'accepted') {
                        this.pwa.isDownloading = true;
                    }
                    this.pwa.prompt = null;
                },
                onClosePwaPopup() {
                    this.pwa.isOpened = false;
                    this.setPwaCookie();
                },
                setPwaCookie(expiredDaysFromToday) {
                    util.setCookie('PwaModalClose', 'PjNu-gh3hH484OIC6wFHEvCCNVrX05HJnafcCFlBd0EDjxUJ-4AnW17p9kKN7hT5seadT6rAfeuZ1dLi7hnzs8dK0BrFGC8tvmE9ZKisluepr7aPMmMnugaNHN_XSbW7r9aFag2', expiredDaysFromToday ?? 1);
                },
            },
        }).mount('#pwa-prompt-popup');
    });
    </script>
<script>
function engineResultToItem(engineResult) {
    return {
        Id: engineResult.id.raw,
        AppSubDomain: engineResult.subdomain.raw,
        Title: engineResult.title.raw,
        CoverImageUrl: engineResult.cover_image_url.raw,
        Payway: JSON.parse(engineResult.payway.raw),
        GroupRequestGroupMoney: engineResult.min_money.raw,
        StartDate: engineResult.start_date.raw,
        CloseDate: engineResult.close_date.raw,
        ProjectInfoArea: engineResult.area.raw,
        ProjectInfoArea_Detail: engineResult.area_detail.raw,
        EventSystemType: engineResult.event_system_type.raw,
        ReceptionType: engineResult.reception_type.raw,
        ViewCount: engineResult.view_count.raw,
        AppTopLogoImageUrl: engineResult.logo_image_url.raw,
        AppThemeColor: engineResult.theme_color.raw,
        AppTitle: engineResult.app_title.raw,
        IsEnd: moment(engineResult.close_date.raw).isBefore(),
        IsDirectPlace: JSON.parse(engineResult.is_direct_place.raw),
        IsPlace: JSON.parse(engineResult.is_place.raw),
        IsOpen: JSON.parse(engineResult.is_open.raw),
    };
}
docReady(() => {
    if (window.navigator.standalone === false) {
        if (navigator.userAgent.indexOf('KAKAOTALK') === -1) {
            const isSafari = iOSSafari(navigator.userAgent);
            if (isSafari) {
                if (util.getCookie('Iphone_message_disabled') !== 'true') {
                    document.getElementById('Iphone_message').style.display = 'block';
                }
            }
        }
    }
    

    function iOSSafari(userAgent) {
        return (
            /iP(ad|od|hone)/i.test(userAgent) &&
            /WebKit/i.test(userAgent) &&
            !/(CriOS|FxiOS|OPiOS|mercury)/i.test(userAgent)
        );
    }

    const bannerDataRaw = '[{\"Id\":4784,\"New_Start_Date\":\"2024-08-06T00:00:00\",\"New_End_Date\":\"2024-08-21T23:59:59\",\"Status\":\"ADVERTISING\",\"ApplyDate\":\"2024-08-05T19:14:28.3019374\",\"Support\":false,\"Position\":\"searchpage\",\"ImageUrl\":\"https://eventusstorage.blob.core.windows.net/evs/Images/searchpage/c7d6223cc4c04d0b862932885a206733.jpg\",\"M_ImageUrl\":\"https://eventusstorage.blob.core.windows.net/evs/Images/searchpage/d17dcca1ca774d1c905064f4208237d7.png\",\"Click_Url\":\"https://event-us.kr/wellbing/event/88623\",\"Banner\":{\"color\":{\"title\":\"#FFFFFF\",\"description\":\"#FFFFFF\",\"date\":\"#FFFFFF\",\"place\":\"#FFFFFF\"}},\"BannerJson\":\"{\\\"color\\\":{\\\"title\\\":\\\"#FFFFFF\\\",\\\"description\\\":\\\"#FFFFFF\\\",\\\"date\\\":\\\"#FFFFFF\\\",\\\"place\\\":\\\"#FFFFFF\\\"}}\",\"BannerTitle\":\"쿠팡 자동화수익 프로세스 최초공개\",\"BannerDescription\":\"쿠팡으로 월300 자동화 수익만들기\",\"BannerDate\":\"2024. 08. 24.(토) 14:00\",\"BannerPlace\":\"오프라인 행사\"},{\"Id\":4789,\"New_Start_Date\":\"2024-08-19T00:00:00\",\"New_End_Date\":\"2024-08-25T23:59:59\",\"Status\":\"ADVERTISING\",\"ApplyDate\":\"2024-08-06T17:41:55.4882589\",\"Support\":false,\"Position\":\"searchpage\",\"ImageUrl\":\"https://eventusstorage.blob.core.windows.net/evs/Images/searchpage/0ff6de0637ae49f18af106b3d306b1b3.png\",\"M_ImageUrl\":\"https://eventusstorage.blob.core.windows.net/evs/Images/searchpage/f63cfd1f809c460abeadf6547abb9b32.png\",\"Click_Url\":\"https://bit.ly/46Eh5X2\",\"Banner\":{\"color\":{\"title\":\"#FFFFFF\",\"description\":\"#FFFFFF\",\"date\":\"#FFFFFF\",\"place\":\"#FFFFFF\"}},\"BannerJson\":\"{\\\"color\\\":{\\\"title\\\":\\\"#FFFFFF\\\",\\\"description\\\":\\\"#FFFFFF\\\",\\\"date\\\":\\\"#FFFFFF\\\",\\\"place\\\":\\\"#FFFFFF\\\"}}\",\"BannerTitle\":\"MWC 2025 참여 기업 모집\",\"BannerDescription\":\"글로벌 비즈니스 기회를 창출하세요\",\"BannerDate\":\"2024. 08. 05.(월) ~ 2024. 08. 26.(월)\",\"BannerPlace\":\"온라인 접수\"}]';
    const searchDataRaw = '';
    const priceConstants = {
        min: 0,
        max: 100,
        multiple: 1000,
    };
    function getSearchTriggerModel(model = {}) {
        return {
            query: model.query ?? '',
            eventtype: model.eventtype ?? '',
            category: model.category ?? '',
            eventsystemtype: model.eventsystemtype ?? 'all',
            area: model.area ?? '',
            costmin: model.costmin ?? 'all',
            order: model.order ?? 'score',
            tag: model.tag ?? '',
            date: model.date ?? '모든날',
            page: Number(model.page ?? 1),
            dateStart: model.dateStart ?? '',
            dateEnd: model.dateEnd ?? '',
            priceValue: model.priceValue ?? [priceConstants.min, priceConstants.max],
            priceMin: Number(model.priceMin ?? priceConstants.min),
            priceMax: Number(model.priceMax ?? priceConstants.max),
            includeEnd: model.includeEnd ?? false,
        };
    }
    function getSearchModel(model = {}) {
        return {
            query: model.query ?? '',
            eventtype: model.eventtype ?? '',
            category: model.category ?? '',
            eventsystemtype: model.eventsystemtype ?? 'all',
            area: model.area ?? '',
            costmin: model.costmin ?? 'all',
            order: model.order ?? 'score',
            tag: model.tag ?? '',
            date: model.date ?? '모든날',
            page: Number(model.page ?? 1),
        };
    }
    window.searchApp = ui.createApp({
        data() {
            return {
                inited: false,
                blobUrl: asp.blobUrl,
                user: asp.user,
                searchTriggerModel: getSearchTriggerModel(),
                showFilter: false,
                banners: JSON.parse(bannerDataRaw),
                eventList: [],
                eventCount: 0,
                metaData: {
                    page: {
                        total_pages: 1,
                    },
                },
                pickedTime: [],
                channelList: [],
                channelCount: 0,
                isSearching: false,
                userFavoriteEvents: [],
                userSubscribeChannels: [],
                categoryOpen: false,
                eventtypeOpen: false,
                categories: {
                    '창업': false,
                    'IT/프로그래밍': false,
                    '라이프': false,
                    '경제/금융': false,
                    '경영': false,
                    '인문/사회': false,
                    '예술': false,
                    '마케팅': false,
                    '커리어': false,
                    '과학기술': false,
                    '디자인/영상': false,
                    '의료/의학': false,
                    '행사 기획': false,
                    '관광/여행': false,
                    '기타': false,
                },
                eventtypes: {
                    '북 콘서트': false,
                    '체험 프로그램': false,
                    '강연/세미나': false,
                    '모임/커뮤니티': false,
                    '멘토링/대외활동': false,
                    '대회/공모전': false,
                    '데모데이': false,
                    '워크샵/클리닉': false,
                    '박람회/페어': false,
                    '관광/투어': false,
                    '콘테스트/콩쿠르': false,
                    '회의/컨벤션': false,
                    '축제/공연/전시': false,
                    '기타': false,
                },
                areaItem: [
                    '서울/경기/인천',
                    '부산/울산/경남',
                    '대구/경북',
                    '충청/대전/세종',
                    '전라/광주',
                    '강원',
                    '제주',
                ],
                bannerOptions: {
                    loop: true,
                    autoplay: true,
                    speed: 1000,
                    navigation: {
                        nextEl: '.next',
                        prevEl: '.prev',
                    },
                },
                sliderOption: {
                    showTooltip: 'slide',
                    format(value) {
                        if (value === priceConstants.max) {
                            return '무제한';
                        }

                        return `${util.numberWithCommas(value * priceConstants.multiple)}원`;
                    },
                },
                boosts: {
                    complate_score: {
                        type: 'functional',
                        function: 'linear',
                        operation: 'add',
                        factor: 0.3,
                    },
                    popular_score: {
                        type: 'functional',
                        function: 'linear',
                        operation: 'add',
                        factor: 0.2,
                    },
                    click_score: {
                        type: 'functional',
                        function: 'logarithmic',
                        operation: 'add',
                        factor: 0.1,
                    },
                    submit_score: {
                        type: 'functional',
                        function: 'logarithmic',
                        operation: 'add',
                        factor: 1,
                    },
                    date: {
                        type: 'proximity',
                        function: 'linear',
                        center: 'now',
                        factor: 0,
                    },
                },
                isUseQueryState: true,
                beforeQuery: null,
                language: 'ko',
                transEn: {
                    '서울/경기/인천': 'Seoul/Gyeonggi/Incheon',
                    '부산/울산/경남': 'Busan/Ulsan/Gyeongnam',
                    '대구/경북': 'Daegu/Gyeongbuk',
                    '충청/대전/세종': 'Chungcheong/Daejeon/Sejong',
                    '전라/광주': 'Jeolla/Gwangju',
                    '강원': 'Gangwon',
                    '제주': 'Jeju',

                    '창업': 'Start-up',
                    'IT/프로그래밍': 'IT/Programming',
                    '라이프': 'Life',
                    '경제/금융': 'Economics/Finance',
                    '경영': 'Management',
                    '인문/사회': 'Humanities/Social Sciences',
                    '예술': 'Art',
                    '마케팅': 'Marketing',
                    '커리어': 'Career',
                    '과학기술': 'Science and Technology',
                    '디자인/영상': 'Design/Video',
                    '의료/의학': 'Medical/Healthcare',
                    '행사 기획': 'Event Planning',
                    '관광/여행': 'Tourism/Travel',
                    '기타': 'Others',

                    '강연/세미나': 'Lecture/Seminar',
                    '모임/커뮤니티': 'Gathering/Community',
                    '멘토링/대외활동': 'Mentoring/Activities',
                    '대회/공모전': 'Competition/Contest',
                    '데모데이': 'Demo Day',
                    '워크샵/클리닉': 'Workshops/Clinics',
                    '박람회/페어': 'Exhibition/Fair',
                    '관광/투어': 'Sightseeing/Tour',
                    '콘테스트/콩쿠르': 'Contest/Concours',
                    '회의/컨벤션': 'Conference/Convention',
                    '축제/공연/전시': 'Festival/Performance/Exhibition',

                    '오늘': 'Today',
                    '이번주': 'This Week',
                    '이번달': 'This Month',
                    '기간선택': 'Select Period',

                    '모집 종료 행사 포함': 'Closed events included',
                    '온라인': 'Online',
                    '오프라인': 'Offline',
                    '무료': 'Free',
                    '유료': 'Paid',
                },
            };
        },
        computed: {
            searchViewModel() {
                return getSearchModel(this.searchTriggerModel);
            },
            filtedCategories() {
                const keys = Object.keys(this.categories);

                return this.categoryOpen ? keys : keys.slice(0, 5);
            },
            filtedEventtypes() {
                const keys = Object.keys(this.eventtypes);

                return this.eventtypeOpen ? keys : keys.slice(0, 5);
            },
            priceText() {
                const min = this.toNumberWithCommas(this.searchTriggerModel.priceValue[0] * priceConstants.multiple);
                const max = this.toNumberWithCommas(this.searchTriggerModel.priceValue[1] * priceConstants.multiple);
                const over = this.searchTriggerModel.priceValue[1] === this.searchTriggerModel.priceMax ? '+' : '';
                const won = this.language === 'ko' ? '원' : 'KRW';

                return `${min} ~ ${max}${won}${over}`;
            },
            dateRange() {
                const self = this;
                const result = {
                    start: moment(null),
                    end: moment(null),
                };
                switch (self.searchTriggerModel.date) {
                    case '모든날':
                        break;
                    case '오늘':
                        {
                            result.start = moment().startOf('day');
                            result.end = moment().endOf('day');
                        }
                        break;
                    case '이번주':
                        {
                            result.start = moment().startOf('week');
                            result.end = moment().endOf('week');
                        }
                        break;
                    case '이번달':
                        {
                            result.start = moment().startOf('month');
                            result.end = moment().endOf('month');
                        }
                        break;
                    case '기간선택':
                        {
                            result.start = moment(self.pickedTime[0] ?? null).startOf('day');
                            result.end = moment(self.pickedTime[1] ?? null).endOf('day');
                        }
                        break;
                }

                return result;
            },
            searchMax() {
                const max = this.metaData.page.total_pages;

                return max > 100 ? 100 : max;
            },
            searchTriggerWatchModel() {
                return getSearchTriggerModel(this.searchTriggerModel);
            },
            filterBadges() {
                const self = this;
                const badges = [];
                if (self.searchTriggerModel.query) {
                    badges.push({
                        title: '검색어: ' + self.searchTriggerModel.query,
                        onCancel: function () {
                            window.setLayoutSearchInput(null);
                            window.setQuery(null);
                        },
                    });
                }
                if (self.searchTriggerModel.date !== '모든날') {
                    badges.push({
                        title: self.searchTriggerModel.date,
                        onCancel: function () {
                            self.searchTriggerModel.date = '모든날';
                        },
                    });
                }
                if (self.searchTriggerModel.includeEnd === true) {
                    badges.push({
                        title: '모집 종료 행사 포함',
                        onCancel: function () {
                            self.searchTriggerModel.includeEnd = false;
                        },
                    });
                }
                Object.keys(self.categories).forEach((x) => {
                    if (self.categories[x]) {
                        badges.push({
                            title: x,
                            onCancel: function () {
                                self.categories[x] = false;
                            },
                        });
                    }
                });
                Object.keys(self.eventtypes).forEach((x) => {
                    if (self.eventtypes[x]) {
                        badges.push({
                            title: x,
                            onCancel: function () {
                                self.eventtypes[x] = false;
                            },
                        });
                    }
                });
                if (self.searchTriggerModel.eventsystemtype && self.searchTriggerModel.eventsystemtype !== 'all') {
                    badges.push({
                        title: self.searchTriggerModel.eventsystemtype,
                        onCancel: function () {
                            self.searchTriggerModel.eventsystemtype = 'all';
                        },
                    });
                }
                if (self.searchTriggerModel.costmin && self.searchTriggerModel.costmin !== 'all') {
                    badges.push({
                        title: self.searchTriggerModel.costmin,
                        onCancel: function () {
                            self.searchTriggerModel.costmin = 'all';
                        },
                    });
                }
                if (self.searchTriggerModel.area) {
                    badges.push({
                        title: self.searchTriggerModel.area,
                        onCancel: function () {
                            self.searchTriggerModel.area = '';
                        },
                    });
                }

                return badges;
            },
        },
        watch: {
            searchTriggerWatchModel(n, o) {
                if (n.page === o.page) {
                    this.searchTriggerModel.page = 1;
                }
                this.getList();
            },
            categories: {
                deep: true,
                handler(newValue) {
                    this.searchTriggerModel.category = Object.keys(newValue)
                        .filter((x) => newValue[x])
                        .join(',');
                },
            },
            eventtypes: {
                deep: true,
                handler(newValue) {
                    this.searchTriggerModel.eventtype = Object.keys(newValue)
                        .filter((x) => newValue[x])
                        .join(',');
                },
            },
            boosts: {
                deep: true,
                handler() {
                    this.getList();
                },
            },
            showFilter(n) {
                if (n) {
                    window.history.pushState(null, '', location.href);
                }
            },
            pickedTime(n) {
                const dateModel = getSearchTriggerModel(this.searchTriggerModel);
                dateModel.dateStart = n[0] ?? '';
                dateModel.dateEnd = n[1] ?? '';
                this.setTriggerModel(dateModel);
            },
        },
        created() {
            const self = this;
            self.setTriggerModel(getSearchTriggerModel(queryString.parse(location.search)));
            self.getChannelList();
            axios.post('/home/getuserfavoriteevents').then(function (result) {
                self.userFavoriteEvents = result.data;
            });
            axios.post('/useraction/getusersubscribeapps').then(function (result) {
                self.userSubscribeChannels = result.data;
            });

            window.onpopstate = function (e) {
                self.isUseQueryState = false;
                self.showFilter = false;
                self.setTriggerModel(
                    e.state?.searchTriggerModelJson
                        ? JSON.parse(e.state.searchTriggerModelJson)
                        : getSearchTriggerModel(queryString.parse(location.search)),
                );
            };

            window.setQuery = function (query) {
                self.setTriggerModel(getSearchTriggerModel({ query }));
            };
            document.addEventListener('languageChanged', (e) => {
                this.language = e.detail.language;
            });
        },
        methods: {
            setTriggerModel(model) {
                const self = this;
                if (self.inited && util.isSameModel(model, self.searchTriggerModel)) return;

                const categories = model.category.split(',');
                Object.keys(self.categories).forEach((x) => (self.categories[x] = categories.includes(x)));

                const eventtypes = model.eventtype.split(',');
                Object.keys(self.eventtypes).forEach((x) => (self.eventtypes[x] = eventtypes.includes(x)));

                if (!['모든날', '오늘', '이번주', '이번달', '기간선택'].includes(model.date)) {
                    const parsing = model.date.split(',')[0].split('~');
                    model.date = '기간선택';
                    model.dateStart = parsing[0] ?? null;
                    model.dateEnd = parsing[1];
                    self.pickedTime = [
                        moment(model.dateStart).format('yyyy/MM/DD'),
                        moment(model.dateEnd).format('yyyy/MM/DD'),
                    ];
                }

                self.searchTriggerModel = model;
            },
            moment(time) {
                return moment(time);
            },
            toNumberWithCommas(num) {
                return util.numberWithCommas(num);
            },
            bannerColor(banner) {
                return banner.Banner.color;
            },
            replaceEnter(e) {
                return e.replace(/(?:\r\n|\r|\n)/g, '<br />');
            },
            setQueryState() {
                const self = this;
                const model = self.searchViewModel;
                const title = ' 행사 - 이벤터스 행사 검색';
                const metaChange = {
                    title(value) {
                        document.title = value;
                        document.querySelector('meta[property="og:title"]').setAttribute('content', value);
                    },
                    description(value) {
                        document.querySelector('meta[name="description"]').setAttribute('content', value);
                        document.querySelector('meta[property="og:description"]').setAttribute('content', value);
                    },
                    keywords(value) {
                        document.querySelector('meta[name="keywords"]').setAttribute('content', value);
                    },
                    url(value) {
                        document.querySelector('link[rel="canonical"]').href = value;
                        document
                            .querySelector('meta[property="og:url"]')
                            .setAttribute('content', 'https://event-us.kr' + value);
                    },
                };
                const searchKeywords = '추천 행사,온라인 행사,사업 행사,창업 행사,마케팅 행사,홍보 행사,문화 행사,예술 행사,커뮤니티 행사,IT 행사,개발 행사,인문 행사,사회 행사,경제 행사,과학 행사,기술 행사,데모데이,세미나,참가자 모집,스타트업 행사,해커톤,연말 행사,연말정산 행사,어워드 행사,재직자 과정,프로그램 모집,온라인 설명회,온라인 전시장,대기업 행사,메타버스,컨퍼런스,포럼,IR,실무 교육,밋업,써밋,마케팅 써밋,온라인 해돋이,페스티벌,페스타';
                if (util.isSameModel(model, getSearchModel())) {
                    metaChange.title(
                        `지금 신청할 수 있는 ${self.eventCount}개 행사 - 이벤터스 행사 검색`,
                    );
                    metaChange.description('지금 이벤터스에서 새로운 행사를 찾아보세요!');
                    metaChange.keywords('행사모집,행사 플랫폼,모임 플랫폼,행사운영,모임,이벤트,하이브리드 이벤트,추천 행사,온라인 행사,웨비나');
                } else {
                    if (model.eventsystemtype && model.eventsystemtype === '전체') {
                        model.eventsystemtype = '';
                    }
                    const filterType = [
                        model.date,
                        model.category,
                        model.eventtype,
                        model.eventsystemtype,
                        model.costmin,
                        model.area,
                    ]
                        .filter((x) => x && typeof x === 'string' && x !== 'all')
                        .join(',');
                    if (model.query) {
                        metaChange.title(model.query + ' - 이벤터스 행사 검색');
                        metaChange.description(model.query + ' 행사 | 지금 이벤터스에서 찾아보세요!');
                        metaChange.keywords(model.query + ',' + searchKeywords);
                    } else {
                        metaChange.title(filterType + title);
                        metaChange.description(filterType + ' 행사 | 지금 이벤터스에서 찾아보세요!');
                        metaChange.keywords(filterType + ',' + searchKeywords);
                    }
                }
                metaChange.url(location.pathname + location.search);
                const queryStringFromURL = queryString.parse(location.search);
                const queryModel = getSearchModel(model);

                Object.keys(queryModel)
                    .filter((x) => queryModel[x] === 'all')
                    .forEach((x) => (queryModel[x] = ''));

                if (queryModel.date === '기간선택') {
                    const dateStringModel = {
                        result: '',
                        isStartValid: self.dateRange.start.isValid(),
                        isEndValid: self.dateRange.end.isValid(),
                        startDiff: 'null',
                        endDiff: 'null',
                    };
                    if (dateStringModel.isStartValid) {
                        dateStringModel.result += self.dateRange.start.format('yyyy-MM-DD');
                        dateStringModel.startDiff = self.dateRange.start.diff(moment().startOf('day'), 'days');
                    }
                    dateStringModel.result += '~';
                    if (dateStringModel.isEndValid) {
                        dateStringModel.result += self.dateRange.end.format('yyyy-MM-DD');
                        dateStringModel.endDiff = self.dateRange.end.diff(
                            dateStringModel.isStartValid ? self.dateRange.start : moment().startOf('day'),
                            'days',
                        );
                    }
                    dateStringModel.result += `,${dateStringModel.startDiff},${dateStringModel.endDiff}`;

                    if (dateStringModel.isStartValid || dateStringModel.isEndValid) {
                        queryModel.date = dateStringModel.result;
                    }
                }
                if (!self.inited) {
                    for (const [key, value] of Object.entries(queryStringFromURL)) {
                        if (key.includes('utm_')) {
                            queryModel[key] = value;
                        }
                    }

                    return;
                }
                if (!self.isUseQueryState) {
                    self.isUseQueryState = true;

                    return;
                }

                const query = queryString.stringify(queryModel, {
                    skipNull: true,
                    skipEmptyString: true,
                    sort: false,
                    encode: false,
                });
                window.history.pushState(
                    { searchTriggerModelJson: JSON.stringify(self.searchTriggerModel) },
                    '',
                    `?${query}`,
                );
            },
            searchViewModelToEngineModel() {
                const self = this;
                const searchViewModel = self.searchViewModel;
                const data = {
                    query: searchViewModel.query ?? '',
                    page: { current: parseInt(searchViewModel.page), size: 12 },
                    filters: {
                        all: [{ state: 'Start' }, { disclosure_status: 'open' }, { is_ignore: 'false' }],
                    },
                    boosts: self.boosts,
                    sort: [],
                };

                if (searchViewModel.area && searchViewModel.area !== '전체') {
                    data.filters.all.push({ area: searchViewModel.area });
                }
                if (searchViewModel.category) {
                    data.filters.all.push({ category: searchViewModel.category.split(',') });
                }
                if (searchViewModel.eventtype) {
                    const eventTypes = searchViewModel.eventtype.split(',');
                    let combineEventTypesIndex = eventTypes.indexOf('회의/컨벤션');
                    if (combineEventTypesIndex !== -1) {
                        eventTypes.splice(combineEventTypesIndex, 1);
                        eventTypes.push(...['기업회의', '학술회의', '정부회의', '컨벤션']);
                    }

                    combineEventTypesIndex = eventTypes.indexOf('축제/공연/전시');
                    if (combineEventTypesIndex !== -1) {
                        eventTypes.splice(combineEventTypesIndex, 1);
                        eventTypes.push(...['축제', '공연/전시']);
                    }
                    data.filters.all.push({ event_type: eventTypes });
                }
                if (searchViewModel.costmin && searchViewModel.costmin !== 'all') {
                    if (searchViewModel.costmin === '유료') {
                        const min_money = {
                            from: self.searchTriggerModel.priceValue[0] * priceConstants.multiple,
                        };
                        if (self.searchTriggerModel.priceValue[1] !== self.searchTriggerModel.priceMax) {
                            min_money.to = self.searchTriggerModel.priceValue[1] * priceConstants.multiple + 1;
                        }
                        data.filters.all.push({ payway: 'true' });
                        data.filters.all.push({ min_money: min_money });
                    } else if (searchViewModel.costmin === '무료') {
                        data.filters.all.push({ payway: 'false' });
                    }
                }
                if (searchViewModel.eventsystemtype && searchViewModel.eventsystemtype !== 'all') {
                    const est =
                        searchViewModel.eventsystemtype === '온라인' || searchViewModel.eventsystemtype === 'online'
                            ? 'online'
                            : 'offline';
                    data.filters.all.push({ event_system_type: [est, 'hybrid'] });
                }
                if (searchViewModel.tag) data.filters.all.push({ tags: searchViewModel.tag });
                if (!self.searchTriggerModel.includeEnd) {
                    data.filters.all.push({
                        register_due_date: { from: moment().format('yyyy-MM-DDTHH:mm:ssZ') },
                    });
                }
                if (searchViewModel.date !== '모든날') {
                    const start_date = {};
                    if (self.dateRange.start.isValid()) {
                        start_date.from = self.dateRange.start.format('yyyy-MM-DDTHH:mm:ssZ');
                    }
                    if (self.dateRange.end.isValid()) {
                        start_date.to = self.dateRange.end.format('yyyy-MM-DDTHH:mm:ssZ');
                    }
                    if (Object.keys(start_date).length !== 0) {
                        data.filters.all.push({ start_date });
                    }
                }

                switch (searchViewModel.order) {
                    case 'score':
                        data.sort.push({ _score: 'desc' });
                        break;
                    case 'duedate':
                        data.sort.push({ register_due_date: 'asc' });
                        break;
                    case 'created':
                        data.sort.push({ date: 'desc' });
                        break;
                }
                data.sort.push({ id: 'desc' });

                return data;
            },
            eventClick(item) {
                const self = this;
                const userAgent = navigator.userAgent.toLowerCase();
                let browser = '';
                if (userAgent.indexOf('edge') > -1) {
                    browser = 'edge';
                } else if (userAgent.indexOf('whale') > -1) {
                    browser = 'whale';
                } else if (userAgent.indexOf('chrome') > -1) {
                    browser = 'chrome';
                } else if (userAgent.indexOf('firefox') > -1) {
                    browser = 'firefox';
                } else {
                    browser = 'else';
                }
                //mixpanel.track("search_view", {
                //    page_no: 3(검색 3번째 페이지에서 클릭시),
                //    item_category: "{행사 분야}",
                //    item_category3: "{행사 유형}",
                //    date_category: "{일시}",
                //    region_category: "{지역}",
                //    method_category: "{참여 방법}",
                //    price_category: "{가격}",
                //    search_term: "검색어 (ex. 스타트업)"
                //});
                axios.post('https://api.event-us.kr/api/v1/engine/click', {
                    query: self.searchViewModel.query,
                    request_id: self.metaData.request_id,
                    document_id: item.Id,
                    tags: [
                        'searchpage',
                        navigator.platform,
                        `browser-${browser}`,
                        'mobile-False',
                        'login-False',
                        `${self.searchViewModel.page}page`,
                    ],
                });
            },
            getList() {
                const self = this;
                if (self.isSearching) {
                    return;
                }
                self.isSearching = true;
                function initList(data) {
                    if (data.errors) {
                        return;
                    }
                    if (data.meta.page.total_results === 0) {
                        if (!self.searchTriggerModel.includeEnd && self.beforeQuery !== self.searchViewModel.query) {
                            self.beforeQuery = self.searchViewModel.query;
                            self.isSearching = false;
                            self.searchTriggerModel.includeEnd = true;

                            return;
                        }
                    }

                    self.metaData = data.meta;
                    self.eventCount = data.meta.page.total_results;
                    self.eventList = data.results.map(function (x) {
                        return engineResultToItem(x);
                    });
                    self.isSearching = false;
                    if (!self.inited) {
                        self.inited = true;
                    }
                }

                if (!self.inited && searchDataRaw) {
                    initList(JSON.parse(searchDataRaw));

                    return;
                }
                
                axios
                    .post('https://api.event-us.kr/api/v1/engine/search', self.searchViewModelToEngineModel())
                    .then((response) => {
                        initList(response.data);
                        self.setQueryState();
                    });
            },
            getChannelList() {
                const self = this;
                axios
                    .post('/home/getmainrecommandsasync', {
                        idsjson: sessionStorage.getItem('todayRecommandEventsIds'),
                    })
                    .then(function ({ data }) {
                        self.channelCount = data.channelCount;
                        self.channelList = util.shuffleArray(data.recommandationChannels).slice(0, 8);
                        sessionStorage.setItem('todayRecommandEventsIds', data.idsJson);
                    });
            },
            resetModel() {
                const self = this;
                self.setTriggerModel(getSearchTriggerModel({ query: self.searchViewModel.query }));
            },
            blobImageUrl(url) {
                return url.charAt(0) === '/' ? asp.blobUrl + url : url;
            },
            categoryToggle() {
                this.categoryOpen = !this.categoryOpen;
            },
            eventtypeToggle() {
                this.eventtypeOpen = !this.eventtypeOpen;
            },
            filterCount() {
                return Object.keys(queryString.parse(location.search)).length - 1;
            },
            onBannerClick(page, id, url) {
                if (url != '') {

                    mixpanel.track("ad_bannersearch2", { "click_url": url });

                    //ad_searchrecommend
                    gtag('event', 'ad_bannersearch2', {
                        click_url: url,
                        items: [
                            {
                                index: 'ad_bannersearch2',
                            },
                        ],
                    });
                }
                if (location.host === 'event-us.kr') {
                    axios.post('/userhelpers/targetclick', { targetid: id });
                }
            },
            onCalendarClick() {
                mixpanel.track("search_event_calendar");
            },
            getSearchpageBannerUtm(item) {
                const url = new URL(item.Click_Url);
                if (!url.hostname.includes('event-us.kr')) {
                    return item.Click_Url;
                }
                const utm = {
                    source: 'eventus',
                    medium: 'banner',
                    campaign: 'search-main',
                    term: this.searchViewModel.query,
                };
                if (!url.searchParams.has('utm_source')) {
                    url.searchParams.set('utm_source', utm.source);
                }
                if (!url.searchParams.has('utm_medium')) {
                    url.searchParams.set('utm_medium', utm.medium);
                }
                if (!url.searchParams.has('utm_campaign')) {
                    url.searchParams.set('utm_campaign', utm.campaign);
                }
                if (!url.searchParams.has('utm_term')) {
                    url.searchParams.set('utm_term', utm.term);
                }
                if (item.Id) {
                    url.searchParams.set('pit_id', item.Id);
                }
                return url.href;
            },
            focusEventSection() {
                document.getElementById('eventSection')?.scrollIntoView({ behavior: 'smooth' });
            },
            Iphone_message_close() {
                document.getElementById('Iphone_message').style.display = 'none';
            },
            Iphone_message_disabled() {
                util.setCookie('Iphone_message_disabled', 'true', '3');
                document.getElementById('Iphone_message').style.display = 'none';
            },
        },
    }).mount('#app');
});
    </script>
<!--구글번역 코드-->
<div id="google_translate_element_applicant" style="display:none;">
</div>
<script>
    function appendGoogleTranslateScript() {
        const script = document.createElement('script');
        script.src = '//translate.google.com/translate_a/element.js?cb=googleTranslateInit';
        document.head.appendChild(script);
    }

    window.setLanguage = function setLanguage(language) {
        // Google 번역 trigger
        const selectbox = document.querySelector('.goog-te-combo');
        selectbox.value = language;
        selectbox.dispatchEvent(new Event('change'));
        
        // 이벤트 dispatch 시 쿠키가 없거나 잘못 설정되는 케이스 방지
        const interval = setInterval(() => {
            const langCookie = getLangCookie();
            if (langCookie !== language) {
                selectbox.value = language;
                selectbox.dispatchEvent(new Event('change'));
            } else {
                clearInterval(interval);
            }
        }, 100);

        // 이벤트 발행
        const event = new CustomEvent('languageChanged', {
            detail: {
                language: language,
            },
        });
        document.dispatchEvent(event);
    }

    window.googleTranslateInit = function googleTranslateInit() {
        new google.translate.TranslateElement(
            {
                pageLanguage: 'ko',
                includedLanguages: 'ko,en',
                autoDisplay: false,
            },
            'google_translate_element_applicant',
        );

        // Google 번역 로드 확인 후 언어값 설정
        const interval = setInterval(() => {
            if (document.querySelector('.goog-te-combo')?.children?.length > 0) {
                clearInterval(interval);

                const language = getLangCookie(); // 쿠키 우선
                if (language) {
                    setLanguage(language);
                } else {
                    // Global 행사 && 브라우저 언어가 외국어면 자동 번역
                    if ('False' === 'True' && !window.navigator.language.includes('ko')) {
                        setLanguage('en');
                    }
                }
            }
        }, 100);

        const googleTranslateIframeStyle = document.createElement('style');
        googleTranslateIframeStyle.innerHTML = `
                    .skiptranslate {
                        display: none !important;
                    }
                    html > body {
                        top: 0 !important;
                    }
                `;
        document.head.appendChild(googleTranslateIframeStyle);
    }

    function getLangCookie() {
        const gtCookie = getCookie('googtrans');
        if (gtCookie) {
            const lang = gtCookie.split('/')[2].split('-')[0];
            return lang;
        }
        return null;
    }

    function getCookie(name) {
        const nameEQ = name + "=";
        const ca = document.cookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) === ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    function setCookie(name, value, days) {
        let expires = "";
        if (days) {
            const intDays = parseInt(days);
            if (isNaN(intDays)) {
                throw new Error('매개변수가 잘못되었습니다. days는 숫자여야 합니다.')
            }
            const date = new Date();
            date.setTime(date.getTime() + (intDays * 24 * 60 * 60 * 1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + (value || "") + expires + "; path=/";
    }

    // 뒤로가기 시 Google 번역이 사라지는 현상 방지
    window.addEventListener('pageshow', (e) => {
        if (e.persisted && !document.querySelector('.goog-te-combo')) {
            appendGoogleTranslateScript();
        }
    });

    window.getLangCookie = getLangCookie;

    appendGoogleTranslateScript();
</script>
<!--구글번역 코드 끝-->
<script crossorigin="anonymous" integrity="sha512-CNgIRecGo7nphbeZ04Sc13ka07paqdeTu0WR1IM4kNcpmBAUSHSQX0FslNhTDadL4O5SAGapGt4FodqL8My0mA==" referrerpolicy="no-referrer" src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
<script src="/Content/neweventus/lib/html2/1.3.2/html2canvas.min.js"></script>
<script src="//developers.kakao.com/sdk/js/kakao.min.js"></script>
<script defer="defer" onload="mobRf()" src="https://cdn.megadata.co.kr/js/en_script/3.5/enliple_min3.5.js"></script>
<script>
        // SDK
        Kakao.init('2b4978da5d2625e633561e5eacc9be14');
        window.fbAsyncInit = function () {
            FB.init({
                appId: '136314230510204',
                autoLogAppEvents: true,
                xfbml: true,
                version: 'v3.2',
            });
        };
        (function (d, s, id) {
            const fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) {
                return;
            }
            const js = d.createElement(s);
            js.id = id;
            js.src = 'https://connect.facebook.net/en_US/sdk.js';
            fjs.parentNode.insertBefore(js, fjs);
        })(document, 'script', 'facebook-jssdk');
        //facebook Analytics
        (function (f, b, e, v, n, t, s) {
            if (f.fbq) return; n = f.fbq = function () {
                n.callMethod ?
                    n.callMethod.apply(n, arguments) : n.queue.push(arguments)
            };
            if (!f._fbq) f._fbq = n; n.push = n; n.loaded = !0; n.version = '2.0';
            n.queue = []; t = b.createElement(e); t.async = !0;
            t.src = v; s = b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t, s)
        })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');

        function mobRf() {
            var rf = new EN();
            rf.setData("userid", "withitsoft");
            rf.setSSL(true);
            rf.sendRf();
        }
    </script>
<script src="https://wcs.naver.net/wcslog.js" type="text/javascript"></script>
<!-- Start of Hubspot Embed Code -->
<script async="" defer="" id="hs-script-loader" src="//js.hs-scripts.com/22319584.js" type="text/javascript"></script>
<!-- End of Hubspot Embed Code -->
<script>
        //네이버 analytics
        if (!wcs_add) var wcs_add = {};
        wcs_add["wa"] = "s_239ba85b9cf2";
        if (!_nasa) var _nasa = {};
        if (window.wcs) {
            wcs.inflow("event-us.kr");
            wcs_do(_nasa);
        }
    </script>
</body>
</html>